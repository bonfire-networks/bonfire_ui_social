name: Process Repository Changes

on:
  push:
    branches:
      - main
  pull_request:
    types: 
      - closed
  workflow_dispatch:
    inputs:
      full_ingest:
        description: 'Perform full repository ingestion'
        required: true
        type: boolean
        default: false

jobs:
  process-changes:
    if: >-
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Process Changes
        env:
          OSIRIS_URL: "osiris-server.vercel.app" 
        run: |
          # Get commit range based on event type
          if [ "${{ github.event_name }}" == "push" ]; then
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.event.after }}"
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            BASE_SHA=$(git rev-parse HEAD^)
            HEAD_SHA=$(git rev-parse HEAD)
          fi

          # Create temporary directory for processing
          TEMP_DIR=$(mktemp -d)
          trap 'rm -rf "$TEMP_DIR"' EXIT

          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.full_ingest }}" == "true" ]; then
            # Full repository ingestion
            echo "Starting full repository ingestion..."
            
            curl -X POST "$OSIRIS_URL/api/ingest-repo" \
              -H "Content-Type: application/json" \
              -d "{
                \"repo\": \"${{ github.repository }}\",
                \"branch\": \"${{ github.ref_name }}\",
                \"metadata\": {
                  \"repository\": \"${{ github.repository }}\",
                  \"branch\": \"${{ github.ref_name }}\",
                  \"event_type\": \"${{ github.event_name }}\",
                  \"commit_sha\": \"${{ github.sha }}\",
                  \"process_timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"
                }
              }"

          else
            # Process incremental changes
            echo "Processing incremental changes..."
            
            # Process changed files
            git diff --name-status --no-renames $BASE_SHA $HEAD_SHA | while read -r status filepath; do
              [ -z "$filepath" ] && continue
              
              if [ "$status" = "M" ] || [ "$status" = "A" ]; then
                content=$(git show "$HEAD_SHA:$filepath" 2>/dev/null | jq -Rs) || continue
                echo "$status $filepath $content" >> "$TEMP_DIR/changes.txt"
              elif [ "$status" = "D" ]; then
                echo "$status $filepath" >> "$TEMP_DIR/changes.txt"
              fi
            done

            # If we have changes, process them
            if [ -f "$TEMP_DIR/changes.txt" ]; then
              # Build changes object
              changes_json="{\"added\":["
              first=true
              while IFS=' ' read -r status filepath content; do
                if [ "$status" = "A" ]; then
                  [ "$first" = true ] && first=false || changes_json+=","
                  changes_json+="{\"path\":\"$filepath\",\"content\":$content}"
                fi
              done < "$TEMP_DIR/changes.txt"
              
              changes_json+="],\"modified\":["
              first=true
              while IFS=' ' read -r status filepath content; do
                if [ "$status" = "M" ]; then
                  [ "$first" = true ] && first=false || changes_json+=","
                  changes_json+="{\"path\":\"$filepath\",\"content\":$content}"
                fi
              done < "$TEMP_DIR/changes.txt"
              
              changes_json+="],\"removed\":["
              first=true
              while IFS=' ' read -r status filepath content; do
                if [ "$status" = "D" ]; then
                  [ "$first" = true ] && first=false || changes_json+=","
                  changes_json+="{\"path\":\"$filepath\"}"
                fi
              done < "$TEMP_DIR/changes.txt"
              
              changes_json+="]}"

              # Send changes to osiris-server
              curl -X POST "$OSIRIS_URL/api/ingest-changes" \
                -H "Content-Type: application/json" \
                -d "{
                  \"repository\": {
                    \"fullName\": \"${{ github.repository }}\",
                    \"defaultBranch\": \"${{ github.ref_name }}\"
                  },
                  \"changes\": $changes_json,
                  \"metadata\": {
                    \"repository\": \"${{ github.repository }}\",
                    \"branch\": \"${{ github.ref_name }}\",
                    \"event_type\": \"${{ github.event_name }}\",
                    \"commit_sha\": \"${{ github.sha }}\",
                    \"base_sha\": \"$BASE_SHA\",
                    \"head_sha\": \"$HEAD_SHA\",
                    \"process_timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"
                  }
                }"
            else
              echo "No relevant file changes detected"
            fi
          fi

      - name: Report Status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.full_ingest }}" == "true" ]; then
              echo "::notice::Successfully completed full repository ingestion"
            else
              echo "::notice::Successfully processed changes"
            fi
          else
            echo "::error::Failed to process changes"
          fi