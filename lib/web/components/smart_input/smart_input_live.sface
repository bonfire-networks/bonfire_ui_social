  <div 
    id="smart_input"
    phx-drop-target={@uploads.files.ref}
    class={"flex h-full",
     "sticky bottom-0": e(assigns, :showing_within, nil) == :message}
    x-data={"{
      title_open: false, 
      open_boundaries: false,
      boundary_selected: '#{if e(assigns, :create_activity_type, nil) == :message, do: "message", else: e(assigns, :preset_boundary, "public")}' 
    }"}
    >
    <div class={
      "flex flex-col flex-1 w-full" }>

      <!-- <div 
        :if={e(assigns, :showing_within, nil) == :message}
        class="mb-2" >
        <div class="mb-1 text-sm font-semibold">
          {l "Send a direct message"} 
          <span :if={is_list(@to_circles) and length(@to_circles)>0}>{l "to"} </span>
        </div>
        <span :for={{name, id} <- @to_circles} class="mr-2 badge badge-outline">{name}</span>
      </div> -->

      <div 
        :if={e(assigns, :showing_within, nil) != :message and length(all_smart_input_components())>1}
        class="dropdown dropdown-hover"
      >
        <label tabindex="0" class="m-1 btn">{smart_input_name(active_smart_input_component(assigns))}</label>
        <ul tabindex="0" class="p-2 shadow dropdown-content menu bg-base-100 rounded-box w-52">
          <li :for={{name, component} <- all_smart_input_components()}>
            <div phx-click="select_smart_input" phx-target={@myself} phx-value-component={component}>{display_name(name)}</div>
          </li>
        </ul>
      </div>

      <!-- show what we're replying to, if any -->
      <Surface.Components.Dynamic.LiveComponent
        module={Bonfire.UI.Social.ActivityLive}
        :if={@activity}
        id={"cap:" <> e(assigns, :activity, :id, "")}
        activity={@activity}
        object={@object}
        thread_mode={:nested}
        class={@replied_activity_class}
        showing_within={:smart_input}
        activity_inception={e(assigns, :activity_inception, nil)}
        object_boundary={:skip}
      />
    
      <Surface.Components.Dynamic.Component
          module={active_smart_input_component(assigns)}
          {...assigns}
        />

    </div>
  </div>
