<div 
class="h-full md:mx-0 text-base-content ">
  <div 
    class="relative h-full">
    <div class="p-3 bg-base-100">
      <input type="text" placeholder="Search here" class="w-full h-10 max-w-xs input input-bordered">
    </div>
    <nav class="overflow-y-auto border-t border-base-300" aria-label="Directory">
      <ul role="list" class="relative z-0 divide-y divide-base-300">
        {#for user <- @users}
        <li 
          phx-click="Bonfire.Social.Messages:select_recipient"
          phx-value-id={e(user, :edge, :object, :character, :id, nil)}
          phx-value-name={e(user, :edge, :object, :profile, :name, "Anon")}
          class="bg-base-100 form-control">
          <label class="px-4 py-3 cursor-pointer label hover:bg-base-300 hover:bg-opacity-60 focus-within:ring-2 focus-within:ring-inset focus-within:ring-primary">
            <div class="relative flex items-center space-x-3 ">
              <div class="flex-shrink-0">
                <LazyImage 
                  class="w-10 h-10 rounded-full" 
                  src={avatar_url(e(user, :edge, :object, nil))}
                  alt="user profile image" />
              </div>
              <div class="flex-1 min-w-0">
                <span class="absolute inset-0" aria-hidden="true"></span>
                <p class="text-sm font-medium text-base-content">{e(user, :edge, :object, :profile, :name, "Unknown")}</p>
                <p class="text-sm truncate text-base-content text-opacity-70">
                  {Bonfire.Me.Characters.display_username(e(user, :edge, :object, nil))}
                </p>
              </div>
            </div>
            {#if Enum.member?(e(assigns, :to_circles, []), {e(user, :edge, :object, :profile, :name, "Anon"), e(user, :edge, :object, :id, nil)})}
            <input   
              type="checkbox" 
              checked="checked"
              class="checkbox checkbox-primary">
            {#else}
            <input   
              type="checkbox" 
              class="checkbox checkbox-primary">
            {/if}
          </label>
        </li>
        {/for}
      </ul>
    </nav>
    <div class="sticky bottom-0 left-0 right-0 z-30 bg-base-200">
      <div class="flex items-center justify-end p-3 space-x-3">
        <LivePatch to={path(Bonfire.Data.Social.Message)} class="normal-case btn btn-ghost btn-sm">{l "Cancel"}</LivePatch>
        <!-- <button phx-click="compose_thread" class="normal-case btn btn-ghost btn-sm">{l "Start"}</button> -->
      </div>
    </div>
  </div>
</div>
