
<div
  class="create_activity"
  x-data="{
    title_open: false, 
    summary_open: false,
    open_boundaries: false,
    boundary_selected: 'public'  
  }">
  <Form 
    for={Bonfire.Social.Posts.LiveHandler.post_changeset(current_user(assigns))} 
    submit="Bonfire.Social.Posts:post" opts={ autocomplete: "off"}
    class={if with_editor?(assigns), do: "form_with_editor", else: "form_with_textarea"}>

    <div  class="rounded shadow bg-base-100">
      <div class="flex px-3 py-3 pb-1">
        <div
          @click="create_activity_open = true" 
          class="flex items-center flex-1 space-x-3 cursor-pointer">
        <div class="cursor-pointer avatar">
          <div class="w-8 h-8 rounded-btn">
            <img 
              src={avatar_url(current_user(assigns))}
              alt="current user profile image" />
          </div>
        </div>
        <span class="flex-1 text-sm text-base-content text-opacity-80" x-text= "smart_input_prompt">
          {@smart_input_placeholder || l "Write a post"}
        </span>
        </div>
        <div class="flex items-center space-x-2">
          <!-- <div class="btn btn-square btn-ghost btn-sm">
            <Outline.ArrowsExpandIcon class="w-4 h-4 text-base-content text-opacity-80" />
          </div> -->
          <div class="btn btn-square btn-ghost btn-sm">
            <Outline.ArrowsExpandIcon 
              class="w-4 h-4 " />
          </div>
        </div>
      </div>

      <div class="relative">
        
          <HiddenInput 
            name="reply_to[reply_to_id]" 
            opts={["x-model": "reply_to_id"]}
            value={@reply_to_id  || ""} />
          <HiddenInput 
            name="reply_to[thread_id]" 
            opts={["x-model": "reply_to_thread_id"]}
            value={@reply_to_thread_id || ""} />
          <Field name={:create_activity_type}>
            <HiddenInput value={@create_activity_type} />
          </Field>
          <input 
            :if={@create_activity_type == "message"}
            :for={{_name, id} <- e(assigns, :to_circles, [])} 
            type="hidden" 
            name="to_circles[]" 
            value={id} />
            <Inputs for={:post_content}>
              <div class="overflow-hidden">
                <div x-show="title_open" x-transition>
                  <label for="title" class="sr-only">Title</label>
                  <Field name={:name}>
                    <TextInput
                      opts={placeholder: "Enter a title"}
                      class="block w-full border-0 pt-2.5 text-lg font-medium placeholder-base-content placeholder-opacity-70 bg-base-100 text-base-content focus:ring-0" 
                      />
                  </Field>
                </div>  
                <!-- <input type="text" name="title" id="title" class="block w-full border-0 pt-2.5 text-lg font-medium placeholder-gray-500 focus:ring-0" placeholder="Title"> -->
                <label for="description" class="sr-only">Description</label>
                <Field class="h-full min-h-full" name={:html_body}>
                  <!-- <Label :if={@smart_input_text && @smart_input_text !="" && @smart_input_placeholder} class="mb-2 alert alert-info">{@smart_input_placeholder}</Label> -->    
                  <Bonfire.Editor.Ck.Bubble 
                      :if={with_editor?(assigns)}
                      field_name="post[post_content][html_body]"
                      textarea_class={@textarea_class} 
                    /> 
                    <TextArea
                      :if={!with_editor?(assigns)}
                      opts={
                        value: @smart_input_text,
                      }
                      class={@textarea_class} 
                      :class="{'rounded-b-none' : create_activity_open === true}"
                    />
                </Field>
              </div>
            </Inputs>
          <div class="">
            <!-- Actions: These are just examples to demonstrate the concept, replace/wire these up however makes sense for your project. -->
          
            <div class="flex items-center justify-between p-2 space-x-2 rounded-b bg-base-300 sm:px-3">
              <div class="flex items-center flex-1 space-x-3">
                <button
                  type="button"
                  class="btn btn-ghost btn-square btn-sm">
                  <Solid.PaperClipIcon class="w-4 h-4 text-base-content text-opacity-70" />
                </button>

                <button
                  :if={Bonfire.Common.Config.get([:ui, :smart_input, :cw], []) == true}
                  type="button"
                  @click="title_open = !title_open"
                  :class="{'text-primary-content bg-primary' : title_open}"
                  class="btn btn-ghost btn-square btn-sm">
                  <!-- <Solid.SpeakerphoneIcon class="w-4 h-4 text-base-content text-opacity-70" /> -->
                  <span class="text-xs font-medium text-base-content text-opacity-70">CW</span>
                </button>

                <Bonfire.UI.Social.BoundariesLive 
                  :if={@create_activity_type != "message"}
                />
              </div>
            </div>
          </div>
      </div>
    </div>
    <div class="grid mt-2 justify-items-stretch">
      <button type="submit" class="capitalize justify-self-end btn btn-primary">
        {l "Create"}
      </button>
    </div>
  </Form>
</div>
