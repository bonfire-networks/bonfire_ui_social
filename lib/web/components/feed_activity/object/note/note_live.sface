
<div class={
  "mt-2",
  "showing_within:feed": e(assigns, :showing_within, nil) == :feed,
  "showing_within:thread -mt-1 ml-12": e(assigns, :showing_within, nil) == :thread,
  "showing_within:notifications ml-7": e(assigns, :showing_within, nil) == :notifications,
  "reply_to": e(@object, :id, nil) != nil and e(@activity, :replied, :reply_to_id, nil) == nil and e(@activity, :id, nil) == nil,
  "reply_message": e(@activity, :replied, :reply_to_id, nil)
}
   x-cloak 
   x-data="{content_open: false}">

    <div :if={e(post_content(@object), :name, nil)}>

      <button
        @click="content_open = true"
        x-show="content_open == false"
        class="flex items-center font-semibold text-left text-md text-base-content hover:underline">
        { rich e(post_content(@object), :name, "CW")} &nbsp; [{l "read post"}]
      </button>
      <button
        @click="content_open = false"
        x-show="content_open"
        class="flex items-center font-semibold text-left text-md text-base-content hover:underline">
        {rich e(post_content(@object), :name, "CW")} &nbsp; [{l "hide post"}]
      </button>

    </div>

      
    <div
      x-show={if e(post_content(@object), :name, nil), do: "content_open"}
      x-transition:enter="transition ease-out duration-100"
      x-transition:enter-start="transform opacity-0 scale-95"
      x-transition:enter-end="transform opacity-100 scale-100"
      x-transition:leave="transition ease-in duration-75"
      x-transition:leave-start="transform opacity-100 scale-100"
      x-transition:leave-end="transform opacity-0 scale-95">
      
      <div
        :if={e(post_content(@object), :summary, "")}
        class="font-light prose max-w-prose">
        {rich e(post_content(@object), :summary, "")}
      </div>

      <div
        data-id={"object_body"}
        :if={e(post_content(@object), :html_body, "")}
        class={"prose object_body max-w-prose"}>
        {rich e(post_content(@object), :html_body, "")}
      </div>

    </div>

    <div class="mt-4 mb-2" :if={e(assigns, :viewing_main_object, nil)} >
      <Bonfire.UI.Social.Activity.DateAgoLive 
        permalink={@permalink}
        viewing_main_object={e(assigns, :viewing_main_object, nil)}
        date_ago={@date_ago}
        verb_display={@verb_display} />
    </div>
</div>
