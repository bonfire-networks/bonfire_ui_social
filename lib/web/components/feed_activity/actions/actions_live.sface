{#if e(@object, :id, nil) != nil and e(@activity, :replied, :reply_to_id, nil) == nil and e(@activity, :id, nil) == nil}
  <div></div>
{#else}
  <div 
    :if={e(assigns, :showing_within, nil) != :notifications} 
    class={
      "thread_actions -ml-2": e(assigns, :showing_within, nil) == :thread,
      "feed_actions mt-2": e(assigns, :viewing_main_object, nil) != true 
      }>

    <div class={"flex items-center justify-between", "mt-3": e(assigns, :viewing_main_object, nil)}>
      {#if e(assigns, :viewing_main_object, nil) != true and e(assigns, :showing_within, nil) != :thread}
        <Bonfire.UI.Social.Activity.ViewThreadLive 
          permalink={@permalink} 
          replied={e(@activity, :replied, nil)}
          object_id={e(@object, :id, "no-object")}
        />
      {#else}
        <Bonfire.UI.Social.Activity.ReplyLive 
          permalink={@permalink} 
          replied={e(@activity, :replied, nil)}
          showing_within={e(assigns, :showing_within, nil)}
          hide_reply={e(assigns, :hide_reply, nil )}
          object_id={e(@object, :id, "no-object")}
          reply_smart_input_text={@reply_smart_input_text}
          reply_to_text={e(@object, :name, nil) || e(@object, :summary, nil) || e(@object, :html_body, nil)}
        />
      {/if}
      <BoostActionLive 
        id={ComponentID.new(BoostActionLive, @object)} 
        object={@object} 
        boost_count={e(@activity, :boost_count, nil)}
        />
      <Bonfire.UI.Social.LikeActionLive
        id={ComponentID.new(Bonfire.UI.Social.LikeActionLive, @object)} 
        object={@object} 
        like_count={e(@activity, :like_count, nil)} 
      />
      <Bonfire.UI.Social.Activity.MoreActionsLive
        id={ComponentID.new(Bonfire.UI.Social.LikeActionLive, @object)} 
        object={@object} 
        activity={@activity} 
        verb={@verb}
        object_type_readable={@object_type_readable}
      />
    </div>
  </div>
{/if}