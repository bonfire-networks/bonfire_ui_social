{#if e(@object, :id, nil) != nil and e(@activity, :replied, :reply_to_id, nil) == nil and e(@activity, :id, nil) == nil}
  <div></div>
{#elseif  e(assigns, :showing_within, nil) == :create_activity_form}
  <span 
    phx-click="Bonfire.Social.Feeds:remove_data"
    class="absolute top-2 right-2 btn btn-ghost btn-xs btn-circle">
    <Outline.XIcon class="w-4 h-4" />
  </span>
{#else}
  <div 
    :if={e(assigns, :showing_within, nil) != :notifications} 
    class={
      "thread_actions mt-2 flex items-center": e(assigns, :showing_within, nil) == :thread,
      "mt-4 border-base-content border-opacity-30 py-3 border-t px-3":  e(assigns, :viewing_main_object, nil),
      "feed_actions mt-2": e(assigns, :viewing_main_object, nil) != true,
      "mt-1": e(assigns, :showing_within, nil) == :widget,
      }>
    <div 
      :if={
        count(e(@activity, :replied, nil)) > 0 and 
        e(assigns, :showing_within, nil) == :thread and 
        e(assigns, :viewing_main_object, nil) != true and 
        @object_type not in [Bonfire.Data.Social.Message]
      }
      class="flex-1">
      <div 
        @click="show_replies = !show_replies"
        class="text-xs normal-case btn btn-xs">
          <span x-show="!show_replies">{l "View"}</span>
          <span x-show="show_replies">{l "Hide"}</span>
          &nbsp;{count(e(@activity, :replied, nil))} {l "replies"}
      </div>
    </div>
    <div class={
      "flex items-center",
      "mt-3 justify-around w-full": e(assigns, :viewing_main_object, nil),
      "justify-end space-x-4 mt-0": e(assigns, :showing_within, nil) == :thread,
      "justify-between": e(assigns, :showing_within, nil) != :thread
      }>
      <!-- {#if e(assigns, :viewing_main_object, nil) != true and e(assigns, :showing_within, nil) != :thread and Bonfire.UI.Social.Activity.ReplyLive.count(e(@activity, :replied, nil)) > 0}
        <Bonfire.UI.Social.Activity.ViewThreadLive 
          permalink={@permalink} 
          replied={e(@activity, :replied, nil)}
          object_id={e(@object, :id, "no-object")}
        />
      {/if}  -->
      <Bonfire.UI.Social.Activity.ReplyLive 
        object_id={e(@object, :id, "no-object")}
        activity_id={e(assigns, :activity, :id, "no-activity")}
        permalink={@permalink} 
        replied={e(@activity, :replied, nil)}
        showing_within={e(assigns, :showing_within, nil)}
        hide_reply={e(assigns, :hide_reply, nil )}
        reply_to_text={text_only(e(@object, :post_content, :name, nil) || e(@object, :post_content, :summary, nil) || e(@object, :post_content, :html_body, e(@object, :id, "")))}
      />
      <BoostActionLive 
        :if={@object_type not in [Bonfire.Data.Social.Message]}
        id={ComponentID.new(BoostActionLive, @object)} 
        object={@object} 
        showing_within={e(assigns, :showing_within, nil)}
        boost_count={e(@activity, :boost_count, nil)}
        />
      <Bonfire.UI.Social.LikeActionLive
        id={ComponentID.new(Bonfire.UI.Social.LikeActionLive, @object)} 
        object={@object} 
        showing_within={e(assigns, :showing_within, nil)}
        like_count={e(@activity, :like_count, nil)} 
      />
      <Bonfire.UI.Social.Activity.MoreActionsLive
        object={@object} 
        object_type={@object_type} 
        activity={@activity} 
        verb={@verb}
        object_type_readable={@object_type_readable}
        showing_within={e(assigns, :showing_within, nil)}
      />
    </div>
  </div>
{/if}