<button
  data-id="like_action"
  id={@id}
  phx-click="Bonfire.Social.Likes:like"
  phx-value-direction={"#{if e(@my_like, nil), do: "down", else: "up"}"}
  phx-value-id={e(@object, :id, nil)}
  phx-value-component={__MODULE__}
  phx-value-current_count={e(@like_count, 0)}
  class={
    "btn btn-ghost btn-circle like like_with_label",
    "btn-xs ": e(assigns, :showing_within, "") == :thread,
    "btn-sm": e(assigns, :showing_within, "") != :thread,
  }> 
  <span 
     class={"text-base-content text-opacity-70", "text-yellow-500 text-opacity-100": e(@my_like, nil)}>
    <Solid.StarIcon 
      :if={e(@my_like, nil)}
      class="w-5 h-5" />
    <!-- <svg 
      :if={!e(@my_like, nil)}
      viewBox="0 0 24 24" 
      width="24" 
      height="24" 
      stroke="currentColor" 
      stroke-width="2"
      fill="none" 
      stroke-linecap="round" 
      stroke-linejoin="round" 
      class="w-4 h-4">
      <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon></svg> -->
    <Outline.StarIcon 
      :if={!e(@my_like, nil)}
      class="w-4 h-4" />
  </span>

  <span 
    :if={!e(@my_like, nil)}
    class="sr-only">
      {l "Like"}
      <span :if={(e(@like_count, 0)) > 0 and Bonfire.Me.Settings.get([:ui, :show_activity_counts], nil, assigns)}>{e(@like_count, 0)}</span>
  </span>
  <span 
    :if={e(@my_like, nil)}
    class="sr-only">
      {l "Liked"}
      <span :if={(e(@like_count, 0)) > 0 and Bonfire.Me.Settings.get([:ui, :show_activity_counts], nil, assigns)}>{e(@like_count, 0)}</span>
  </span>
</button>
