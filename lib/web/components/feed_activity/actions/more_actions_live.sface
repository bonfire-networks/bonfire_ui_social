<div
  :if={current_user(assigns)}
  aria-haspopup="true"
  class={"dropdown  feed_activity",
  "dropdown-end": e(assigns, :showing_within, nil) != :widget,
  "dropdown-top dropdown-end showing_within:widget": e(assigns, :showing_within, nil) == :widget
  }>
  <div 
    tabindex="0"
    class="feed_activity_action">
    <span class="feed_activity_icon">
      <Solid.DotsHorizontalIcon class="w-4 h-4" />
      <!-- <svg 
      viewBox="0 0 24 24" 
      width="24" 
      height="24" 
      stroke="currentColor" 
      stroke-width="1" 
      fill="none" 
      stroke-linecap="round" 
      stroke-linejoin="round" 
      class="w-4 h-4">
      <circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle></svg> -->
      <!-- <Solid.DotsHorizontalIcon class="w-4 h-4" /> -->
    </span>
  </div>
  <ul
    tabindex="0"
    class="w-60 shadow menu dropdown-content bg-neutral-content rounded dropdown_actions
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="more-menu">

    <#slot name="extra_items" />

    <!-- Copy the activity -->
    <li 
      class=" hover:bg-neutral hover:bg-opacity-20">
      <div class="">
        <div class="flex items-center w-full text-sm text-neutral no-padding">
          <Solid.ClipboardIcon
          class={"w-4 h-4 mr-2 shrink-0 text-neutral text-opacity-70"} />
          <span 
            class={"truncate ellipsis"}>
            {l "Copy the post"}
          </span>
        </div>
      </div>
    </li>

    <!-- Follow the author-->
    <li 
      :if={e(current_user(assigns), :id, nil) != subject_id(assigns)}
      class=" hover:bg-neutral hover:bg-opacity-20">
      <div>
        <Bonfire.UI.Social.FollowButtonLive
          object={subject(assigns)}
          label={name(assigns)}
          id={ComponentID.new(Bonfire.UI.Social.FollowButtonLive, subject(assigns))}
          class="flex items-center w-full text-sm text-neutral no-padding"
          icon_class="w-4 h-4 mr-0 shrink-0 text-neutral text-opacity-70"
        />
      </div>
    </li>

    <div class="h-px my-0 divider bg-opacity-40 bg-neutral"></div> 
    
    <!-- Flag the action -->
    <li 
      :if={e(current_user(assigns), :id, nil) != e(@activity, :subject, :character, :id, nil) and @verb !="flag"}
      class=" hover:bg-neutral hover:bg-opacity-20">
      <Bonfire.UI.Social.FlagActionLive 
        object={@object}
        flagged={@flagged}
        label={l("Flag this")<>" "<>e(assigns, :object_type_readable, l "object")}
        class="flex items-center py-2 text-sm text-neutral"
      />
    </li>

    <!-- Flag the author -->
    <li 
      :if={e(current_user(assigns), :id, nil) != e(@activity, :subject, :character, :id, nil) and @verb !="flag"}
      class=" hover:bg-neutral hover:bg-opacity-20">
      <Bonfire.UI.Social.FlagActionLive 
        object={@object}
        flagged={@flagged}
        label={l("Flag ")<>" "<>name(assigns)}
        class="flex items-center py-2 text-sm text-neutral"
      />
    </li>

    <!-- Block the author & Block the author instance wide-->
    <Bonfire.UI.Social.BlockMenuButtonsLive
      object={subject(assigns)}
      peered={e(@object, :peered, nil)}
    />

    <div 
      :if={e(current_user(assigns), :id, nil) != subject_id(assigns)}
      class="h-px my-0 divider bg-opacity-40 bg-neutral"></div> 
    <!-- <li 
      :if={e(current_user(assigns), :id, nil) == e(@activity, :subject, :character, :id, nil) or Bonfire.Me.Users.is_admin?(current_user(assigns))}
      class=" hover:bg-neutral hover:bg-opacity-20">
      <OpenModalLive
        id={ComponentID.new(OpenModalLive, @object)} 
        title_text={l("Delete this")<>" "<>(if @verb in ["write", "create"], do: l("from feeds"), else: @verb)}
        >
        {l "You may be able to undo this deletion in some cases, but the data will eventually be permanently deleted."}
        <:open_btn>
          <button class="flex items-center text-sm text-neutral" type="button">
            <Solid.TrashIcon class="w-4 h-4 mr-2 shrink-0 text-neutral text-opacity-70" />
            <span class="truncate ellipsis">
              {l("Delete this")<>" "<>(if @verb in ["write", "create"], do: l("from feeds"), else: @verb)}
            </span>
          </button>
        </:open_btn>
        <:action_btns>
          <button 
          phx-click={"Bonfire.Social.Objects:delete"} 
          phx-value-id={e(@activity, :id, "")}
          class="btn btn-error">
          <Solid.TrashIcon class="w-4 h-4 mr-2 shrink-0 text-neutral text-opacity-70" />
          <span class="truncate ellipsis">{l("Delete this")<>" "<>(if @verb in ["write", "create"], do: l("from feeds"), else: @verb)}</span> 
        </button>
        </:action_btns>
      </OpenModalLive>
    </li> -->


    <!-- Delete the post -->
    <li 
      :if={e(current_user(assigns), :id, nil) == e(@activity, :subject, :character, :id, nil) or Bonfire.Me.Users.is_admin?(current_user(assigns))}
      class=" hover:bg-neutral hover:bg-opacity-20">
      <OpenModalLive
        id={ComponentID.new(OpenModalLive, @object)} 
        title_text={l("Delete this")<>" "<>e(assigns, :object_type_readable, l "object")}
        >
        {l "You may be able to undo this deletion in some cases, but the data will eventually be permanently deleted."}
        <:open_btn>
          <button class="flex items-center text-sm text-neutral" type="button">
            <Solid.TrashIcon class="w-4 h-4 mr-2 shrink-0" />
            <span class="truncate ellipsis">
              {l("Delete this")<>" "<>e(assigns, :object_type_readable, l "object")}
            </span>
          </button>
        </:open_btn>
        <:action_btns>
          <button 
          phx-click={"Bonfire.Social.Objects:delete"} 
          phx-value-id={e(@object, :id, "")}
          class="btn btn-error">
          <Solid.TrashIcon class="w-4 h-4 mr-2 shrink-0" />
          <span class="truncate ellipsis">{l("Delete this")<>" "<>e(assigns, :object_type_readable, l "object")}</span>
        </button>
        </:action_btns>

      </OpenModalLive>
    </li>

    <#slot name="admin_items" />

  </ul>
</div>