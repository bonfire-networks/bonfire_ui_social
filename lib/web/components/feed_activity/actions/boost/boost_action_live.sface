<button
  id={@id}
  data-id={"boost_action"}
  :if={@object}
  phx-click={"#{if e(assigns, :my_boost , nil), do: "Bonfire.Social.Boosts:undo", else: "Bonfire.Social.Boosts:boost"}"}
  phx-target={@myself}
  phx-value-id={e(@object, :id, nil)}
  phx-value-component={__MODULE__}
  class={
    "btn btn-ghost btn-circle boost",
    "btn-xs ": e(assigns, :showing_within, "") == :thread,
    "btn-sm": e(assigns, :showing_within, "") != :thread,
  }> 
  {#if e(assigns, :showing_within, nil) != :message}
  <span class={"text-base-content text-opacity-70", "text-opacity-100 text-info": e(assigns, :my_boost, nil)}>

    <svg 
      viewBox="0 0 24 24" 
      width="24" 
      height="24" 
      stroke="currentColor" 
      stroke-width="2" 
      fill="none" 
      stroke-linecap="round" 
      stroke-linejoin="round" 
      class={"w-4 h-4"}>
      <polyline points="17 1 21 5 17 9"></polyline><path d="M3 11V9a4 4 0 0 1 4-4h14"></path><polyline points="7 23 3 19 7 15"></polyline><path d="M21 13v2a4 4 0 0 1-4 4H3"></path></svg>

  </span>
  {/if}

  <span class={"feed_activity_text sr-only", "font-medium": e(assigns, :my_boost , nil)}>
    {if e(assigns, :my_boost , nil), do: l("Boosted"), else: l("Boost")}
    <span :if={e(@boost_count, 0) > 0 and Bonfire.Me.Settings.get([:ui, :show_activity_counts], nil, assigns)}>{e(@boost_count, 0)}</span>
  </span>

</button>
