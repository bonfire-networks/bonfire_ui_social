<Bonfire.UI.Social.BlockButtonsLive
  :if={current_user(assigns) && e(current_user(assigns), :id, nil) != e(@object, :character, :id, nil)}
  object={@object}
  label={e(@object, :profile, :name, l "this user")}
  class="flex items-center w-full text-sm text-neutral"
/>

<Bonfire.UI.Social.BlockButtonsLive
  :if={current_user(assigns) && e(peered(assigns), :peer_id, nil)}
  object={e(peered(assigns), :peer_id, nil)}
  label={URI.parse(e(peered(assigns), :canonical_uri, "#")).host}
  class="flex items-center w-full text-sm text-neutral"
/>

<li 
  :if={current_user(assigns) && e(current_user(assigns), :id, nil) != e(@object, :id, nil) && Bonfire.Me.Users.is_admin?(current_user(assigns))}
  class=" hover:bg-neutral hover:bg-opacity-20">

  <div tabindex="0">
    <button class="flex items-center w-full text-sm text-neutral">
      <Outline.KeyIcon 
        :if={e(assigns, :scope, nil) !="instance_wide"} 
        class="w-4 h-4 mr-2 shrink-0 text-neutral text-opacity-70" />
      <span class="flex-1 text-left truncate ellipsis">{l "Ban instance-wide"}</span>
      <Solid.ChevronRightIcon class="w-4 h-4 text-neutral text-opacity-70" />
    </button>
  </div>
  <ul
      tabindex="0"
      class="w-60 shadow menu dropdown-content bg-neutral-content rounded
      role="menu"
      aria-orientation="vertical">

      <Bonfire.UI.Social.BlockButtonsLive
        object={@object}
        scope="instance_wide"
        label={e(@object, :profile, :name, l "this user")}
        class="flex items-center w-full text-sm text-neutral"
      />

      <Bonfire.UI.Social.BlockButtonsLive
        :if={e(peered(assigns), :peer_id, nil)}
        object={e(peered(assigns), :peer_id, nil)}
        scope="instance_wide"
        label={URI.parse(e(peered(assigns), :canonical_uri, "#")).host}
        class="flex items-center w-full text-sm text-neutral"
      />

  </ul>
</li>