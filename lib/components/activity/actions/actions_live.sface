<!-- {#if ulid(@object) != nil and e(the_activity(@activity, @object), :replied, :reply_to_id, nil) == nil and
    ulid(@activity) == nil}
  <div />
{#else} -->
<div
  :if={@thread_mode != :flat}
  :class={if @viewing_main_object != true and Settings.get([:ui, :compact], false, @__context__),
    do: "activity_active ? '' : '[@media(any-hover:hover)]:hidden'"}
  class={
    "thread_actions mt-1 flex items-center":
      @showing_within == :thread or Settings.get([:ui, :compact], false, @__context__),
    "feed_actions items-center flex": @viewing_main_object != true,
    "mt-2": e(@showing_within, :feed) == :feed || e(@showing_within, :feed) == :notifications,
    "mt-1": @showing_within == :widget,
    "absolute z-50 p-0.5 h-8 hidden group-hover:flex rounded-md top-[-24px] right-[12px] bg-base-100 border border-base-200":
      @thread_mode == :flat
  }
>
  {#if @viewing_main_object != true}
    {#if e(@showing_within, :feed) == :feed || e(@showing_within, :feed) == :notifications}
      {#if String.starts_with?(@permalink, ["/post/", "/discussion/"])}
        <Bonfire.UI.Common.OpenPreviewLive
          href={@permalink || path(@object)}
          open_btn_text={l("Read discussion")}
          title_text={e(@object, :name, nil) || e(@object, :post_content, :name, nil) || l("Discussion")}
          open_btn_class="px-1 normal-case btn btn-sm btn-ghost text-base-content/60"
          modal_assigns={
            post_id:
              if(
                @object_type |> debug("object_type") == :post or
                  String.starts_with?(@permalink || "", ["/post/"]),
                do: @thread_id || ulid(@object)
              ),
            object_id: @thread_id || ulid(@object),
            object: if(@thread_id == ulid(@object), do: @object),
            show: {false},
            activity: if(@thread_id == ulid(@object), do: @activity),
            preview_component: Bonfire.UI.Social.ObjectThreadLoadLive
          }
          root_assigns={
            page_title: l("Discussion")
          }
        />
        <!-- TODO: derive the view from object_type? and compute object_type not just based on schema, but also with some logic looking at fields (eg. action=="work") -->
      {#elseif String.starts_with?(@permalink || "", ["/coordination/task/"])}
        <Bonfire.UI.Common.OpenPreviewLive
          href={@permalink}
          open_btn_text={l("View task")}
          title_text={e(@object, :name, nil) || l("Task")}
          open_btn_class="px-1 normal-case btn btn-sm btn-ghost text-base-content/60"
          modal_assigns={
            id: @thread_id || ulid(@object),
            preview_view: Bonfire.UI.Coordination.TaskLive
          }
          root_assigns={
            page_title: l("Task")
          }
        />
      {#elseif String.starts_with?(@permalink || "", ["/coordination/list/"])}
        <LiveRedirect to={@permalink} class="px-1 normal-case btn btn-sm btn-ghost text-base-content/60">
          {l("View list")}
        </LiveRedirect>
      {#else}
        <LiveRedirect to={@permalink} class="px-1 normal-case btn btn-sm btn-ghost text-base-content/60">
          {l("View")}
        </LiveRedirect>
      {/if}
    {/if}
  {/if}

  <!-- :if={String.starts_with?(@permalink || "", ["/post/", "/discussion/"])} 
    TODO: specifically exclude some @object_type instead
     -->
  <div class={
    "feed-clickable flex items-center flex-1 justify-end space-x-4 mt-0",
    "-mx-3 !p-3 !pb-0 !mt-4": @viewing_main_object == true,
    "!space-x-2": @thread_mode == :flat
  }>
    <Bonfire.UI.Social.Activity.ReactionsLive
      object={@object}
      activity={@activity}
      object_type={@object_type}
      object_boundary={@object_boundary}
      permalink={@permalink}
      thread_mode={@thread_mode}
      showing_within={@showing_within}
      object_type_readable={@object_type_readable}
      hide_reply={@hide_reply}
    />

    <Bonfire.UI.Social.Activity.MoreActionsLive
      :if={@showing_within != :feed}
      object={@object}
      activity={@activity}
      object_type={@object_type}
      object_boundary={@object_boundary}
      object_type_readable={@object_type_readable}
      verb={@verb}
      showing_within={@showing_within}
    />
  </div>
</div>
<!-- {/if} -->