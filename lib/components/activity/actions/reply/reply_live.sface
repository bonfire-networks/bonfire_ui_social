<div class="relative z-20 flex items-center">
  {#case @current_user == nil or @object_type in [Bonfire.Data.Social.Message] or
      Bonfire.Boundaries.can?(@__context__, :reply, @object_boundary)}
    {#match true}
      <button
        class={@class}
        data-id="action_reply"
        phx-click="Bonfire.Social.Feeds:reply_to_activity"
        phx-value-id={@object_id}
        phx-target={if @activity_id, do: "#activity--" <> e(@activity_id, "")}
        title={l("Reply")}
      >
        <!-- x-on:click={"show_smart_input('#{l("Reply")}')"} -->
        <span class="text-opacity-50 text-base-content">
          <Icon iconify="ic:round-reply" class="w-5 h-5 stroke-1" />
        </span>
        <span class={if !@reply_btn_text, do: "sr-only"}>{@reply_btn_text || l("Reply")}</span>
      </button>
      <!-- {/if} -->
      <span
        :if={Bonfire.Me.Settings.get([:ui, :show_activity_counts], nil, @__context__)}
        class="ml-1 text-xs text-base-content text-opacity-70"
      >
        {#if count(@replied) > 0}
          {count(@replied)}
        {/if}
      </span>
    {#match false}
      <button
        type="button"
        class={@class, " cursor-not-allowed"}
        data-id="action_reply"
        title={l("You can't reply to this activity")}
      >
        <span class="text-opacity-20 text-base-content">
          <Icon iconify="ic:round-reply" class="w-5 h-5 stroke-1" />
        </span>
        <span class={if !@cannot_reply_text, do: "sr-only"}>{@cannot_reply_text || l("Cannot Reply")}</span>
      </button>
      <span
        :if={Bonfire.Me.Settings.get([:ui, :show_activity_counts], nil, @__context__)}
        class="ml-1 text-xs text-base-content text-opacity-70"
      >
        {#if count(@replied) > 0}
          {count(@replied)}
        {/if}
      </span>
    {#match _}
  {/case}
</div>
