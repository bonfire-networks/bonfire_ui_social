<div :if={@object_boundary} class="relative z-20 flex items-center">
  {#case @current_user == nil or @object_type in [Bonfire.Data.Social.Message] or
      Bonfire.Boundaries.can?(@__context__, :reply, @object_boundary)}
    {#match true}
      <button
        data-role="reply_enabled"
        class={@class}
        data-id="action_reply"
        phx-click={Bonfire.Social.Feeds.LiveHandler.reply_to_activity(@activity_component_id)}
        title={l("Reply")}
      >
        <!-- x-on:click={"show_smart_input('#{l("Reply")}')"} -->
        <Iconify.Bonfire.Reply.render class={"w-5 h-5 stroke-1 fill-base-content/70", "!fill-primary-content": @reply_btn_text} />
        <span class={if !@reply_btn_text, do: "sr-only"}>{@reply_btn_text || l("Reply")}</span>
      </button>
      <!-- {/if} -->
      <span :if={!@reply_btn_text} class="ml-1 text-[13px] text-base-content/80">
          {count(@replied)}
      </span>
    {#match _}
      <button
        type="button"
        data-role="reply_disabled"
        class={@class, " cursor-not-allowed"}
        data-id="action_reply"
        title={l("You can't reply to this activity")}
      >
        <span class="text-opacity-20 text-base-content">
          <Iconify.Bonfire.Reply.render class="w-5 h-5 stroke-1 fill-base-content/20" />
        </span>
        <span class={if !@cannot_reply_text, do: "sr-only"}>{@cannot_reply_text || l("Cannot Reply")}</span>
      </button>
      <span
        :if={Bonfire.Me.Settings.get([:ui, :show_activity_counts], nil, @__context__)}
        class="ml-1 text-xs text-base-content text-opacity-70"
      >
        {#if count(@replied) > 0}
          {count(@replied)}
        {/if}
      </span>
  {/case}
</div>
