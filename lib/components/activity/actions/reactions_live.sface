<Bonfire.UI.Social.Activity.ReplyLive
  object_id={ulid(@object)}
  object_type={@object_type}
  activity_id={ulid(Bonfire.UI.Social.Activity.ActionsLive.the_activity(@activity, @object))}
  object_boundary={@object_boundary}
  permalink={@permalink}
  thread_mode={@thread_mode}
  replied={e(Bonfire.UI.Social.Activity.ActionsLive.the_activity(@activity, @object), :replied, nil)}
  showing_within={@showing_within}
  hide_reply={@hide_reply}
/>

<Bonfire.UI.Common.BoostActionLive
  :if={@object_type not in [Bonfire.Data.Social.Message]}
  id={ComponentID.new(Bonfire.UI.Common.BoostActionLive, ulid(@object))}
  object_id={ulid(@object)}
  object_type={@object_type}
  object_boundary={@object_boundary}
  showing_within={@showing_within}
  boost_count={e(Bonfire.UI.Social.Activity.ActionsLive.the_activity(@activity, @object), :boost_count, nil)}
/>

<Bonfire.UI.Common.LikeActionLive
  id={ComponentID.new(Bonfire.UI.Common.LikeActionLive, ulid(@object))}
  object_id={ulid(@object)}
  object_boundary={@object_boundary}
  showing_within={@showing_within}
  like_count={e(Bonfire.UI.Social.Activity.ActionsLive.the_activity(@activity, @object), :like_count, nil)}
/>
