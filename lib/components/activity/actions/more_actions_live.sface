<div
  id={"more-menu-#{id(@activity_component_id || @activity)}"}
  aria-haspopup="true"
  class={
    "dropdown feed_activity relative",
    "dropdown-end": @showing_within != :widget,
    "dropdown-top dropdown-end showing_within:widget": @showing_within == :widget
  }
>
  <!-- phx-viewport-bottom={JS.add_class("!dropdown-top", to: "#more-menu-#{id(@activity_component_id || @activity)}")} -->

  <button tabindex="0" class="rounded btn btn-ghost btn-square btn-sm">
    <#Icon solid="DotsVertical" class="w-[18px] h-[18px] md:w-4 md:h-4 text-base-content/70" />
  </button>
  <ul
    tabindex="0"
    class="!block w-64 z-[910] relative shadow menu md:menu-compact dropdown-content text-base-content bg-base-200 rounded-lg dropdown_actions"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="more-menu"
  >
    <#slot {@extra_items} />

    <Dynamic.Component
      :if={@object_boundary && module_enabled?(Bonfire.Boundaries.Web.PermissionsIconLive) &&
        @object_type not in [Bonfire.Data.Social.Message]}
      module={Bonfire.Boundaries.Web.PermissionsIconLive}
      with_label
      object_id={id(@object)}
      object_boundary={@object_boundary}
      parent_id={@activity_component_id || id(@activity)}
    />

    <li :if={module_enabled?(Bonfire.Classify.Web.TagModalLive)}>
      <Dynamic.Component
        module={Bonfire.Classify.Web.TagModalLive}
        object={@object}
        parent_id={@activity_component_id || id(@activity)}
      />
    </li>

    <li :if={current_user_id(@__context__) != @subject_id}>
      <Dynamic.Component
        :if={module_enabled?(Bonfire.Boundaries.Web.AddToCircleLive) and @current_user}
        module={Bonfire.Boundaries.Web.AddToCircleLive}
        user_id={@subject_id}
        parent_id={id(@activity_component_id || @activity)}
      />
    </li>

    <!-- <li class="hover:bg-neutral hover:bg-opacity-20">
      <Bonfire.UI.Social.PinActionLive
        object={@object}
        class="flex items-center px-4 text-sm text-neutral-content/80"
      />
    </li>

    <li :if={Integration.is_admin?(@current_user) or Bonfire.Boundaries.can?(@current_user, :pin, :instance)}>
      <Bonfire.UI.Social.PinActionLive
        object={@object}
        class="flex items-center px-4 text-sm text-neutral-content/80"
        scope={:instance}
      />
    </li> -->

    <!-- Flag the object -->
    <li
      data-role="flag_object"
      :if={current_user_id(@__context__) != @subject_id and @verb != "Flag"}
    >
      <Bonfire.UI.Common.FlagActionLive
        object={@object}
        flagged={@flagged}
        parent_id={"object-#{id(@activity_component_id || @activity)}"}
        object_type={e(@object_type_readable, l("object"))}
        label={l("Flag this %{object}", object: e(@object_type_readable, l("object")))}
      />
    </li>

    <!-- Flag the author -->
    <li
      data-role="flag_author"
      :if={(not is_nil(@subject_id) and (@verb != "Flag" and is_nil(@current_user))) or
        current_user_id(@__context__) != @subject_id}
    >
      <Bonfire.UI.Common.FlagActionLive
        object={@subject_id}
        flagged={@flagged}
        parent_id={"user-#{id(@activity_component_id || @activity)}"}
        object_type={@name || l("user")}
      />
    </li>

    <!-- Block the author & Block the author instance wide -->
    <li>
      <details>
        <summary>
        <div class="flex items-center w-full gap-2 text-sm text-base-content/80">
          <#Icon iconify="heroicons-solid:ban" class="w-4 h-4 shrink-0" />
          <span class="truncate ellipsis">{l "Block"}</span>
        </div>
        </summary>
        <ul>
        <Bonfire.Boundaries.Web.BlockMenuButtonsLive
          parent_id={@activity_component_id || id(@activity)}
          object={@subject}
          peered={e(@object, :peered, nil)}
        />
      </ul>
    </details>
  </li>
    {#if @object_boundary && @object_type not in [Bonfire.Data.Social.Message] && id(@activity)}
    <li>
       <details>
        <summary>
        <div class="flex items-center w-full gap-2 text-sm text-error/80">
          <#Icon solid="Trash" class="w-4 h-4 shrink-0" />
          <span class="truncate ellipsis">{l "Delete"}</span>
        </div>
        </summary>
        <ul>
          <li>
            <Bonfire.UI.Social.Activity.DeleteObjectLive
              object={@object}
              creator_id={@subject_id}
              object_type_readable={@object_type_readable}
              object_boundary={@object_boundary}
              parent_id={"object-#{id(@activity_component_id || @activity)}"}
            />
          </li>

          <!-- Delete the activity -->
          <li>
            <Bonfire.UI.Social.Activity.DeleteObjectLive
              action="Bonfire.Social.Feeds:delete"
              object={@activity}
              object_boundary={@object_boundary}
              object_type_readable={l("from feeds")}
              creator_id={@subject_id}
              parent_id={"delete-activity-#{id(@activity_component_id || @activity)}"}
              explanation={l(
                "Deleting from feeds means this %{verb} and this %{object} still exist, but this activity won't be discoverable via the local instance's feeds. Remote feeds won't be affected.",
                object: e(@object_type_readable, l("object")),
                verb: @verb
              )}
            />
          </li>
        </ul>
    </details>
    </li>
    <!-- Delete the object -->
    {#elseif @object_boundary && @object_type in [Bonfire.Data.Social.Message] && id(@activity)}
    <Bonfire.UI.Social.Activity.DeleteObjectLive
        object={@object}
        creator_id={@subject_id}
        object_type_readable={@object_type_readable}
        object_boundary={@object_boundary}
        parent_id={"object-#{id(@activity_component_id || @activity)}"}
      />
    {/if}
    <#slot {@admin_items} />
  </ul>
</div>