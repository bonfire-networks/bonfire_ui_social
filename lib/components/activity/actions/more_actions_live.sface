<div
  aria-haspopup="true"
  class={
    "dropdown feed_activity relative",
    "dropdown-end": @showing_within != :widget,
    "dropdown-top dropdown-end showing_within:widget": @showing_within == :widget
  }
>
  <button tabindex="0" class="rounded btn btn-ghost btn-square btn-sm">
    <#Icon solid="DotsVertical" class="w-[18px] h-[18px] md:w-4 md:h-4 text-base-content/70" />
  </button>
  <ul
    tabindex="0"
    class="!block w-60 z-[910] relative shadow menu md:menu-compact dropdown-content text-base-content bg-base-100 rounded dropdown_actions"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="more-menu"
  >
    <#slot {@extra_items} />

    <Dynamic.Component
      :if={@object_boundary && module_enabled?(Bonfire.Boundaries.Web.PermissionsIconLive) &&
        @object_type not in [Bonfire.Data.Social.Message]}
      module={Bonfire.Boundaries.Web.PermissionsIconLive}
      with_label
      object_boundary={@object_boundary}
      parent_id={@activity_component_id || id(@activity)}
    />

    <li :if={module_enabled?(Bonfire.Classify.Web.TagModalLive)}>
      <Dynamic.Component
        module={Bonfire.Classify.Web.TagModalLive}
        object={@object}
        parent_id={@activity_component_id || id(@activity)}
      />
    </li>

    <!-- <li class="hover:bg-neutral hover:bg-opacity-20">
      <Bonfire.UI.Social.PinActionLive
        object={@object}
        class="flex items-center px-4 text-sm text-neutral-content/80"
      />
    </li>

    <li :if={Integration.is_admin?(@current_user) or Bonfire.Boundaries.can?(@current_user, :pin, :instance)}>
      <Bonfire.UI.Social.PinActionLive
        object={@object}
        class="flex items-center px-4 text-sm text-neutral-content/80"
        scope={:instance}
      />
    </li> -->

    <!-- Flag the object -->
    <li
      data-role="flag_object"
      :if={current_user_id(@__context__) != subject_id(@activity, @object) and @verb != "Flag"}
    >
      <Bonfire.UI.Common.FlagActionLive
        object={@object}
        flagged={@flagged}
        parent_id={"object-#{id(@activity_component_id || @activity)}"}
        label={l("Flag this %{object}", object: e(@object_type_readable, l("object")))}
      />
    </li>

    <!-- Flag the author -->
    <li
      data-role="flag_author"
      :if={(@verb != "Flag" and is_nil(@current_user)) or
        current_user_id(@__context__) != subject_id(@activity, @object)}
    >
      <Bonfire.UI.Common.FlagActionLive
        object={@object}
        flagged={@flagged}
        parent_id={"user-#{id(@activity_component_id || @activity)}"}
        label={l("Flag %{name}", name: name(@activity, @object))}
      />
    </li>

    <!-- Block the author & Block the author instance wide -->
    <Bonfire.Boundaries.Web.BlockMenuButtonsLive
      parent_id={@activity_component_id || id(@activity)}
      object={subject(@activity, @object)}
      peered={e(@object, :peered, nil)}
    />

    <!-- Delete the object -->
    <li :if={@object_boundary}>
      <Bonfire.UI.Social.Activity.DeleteObjectLive
        object={@object}
        creator_id={subject_id(@activity, @object)}
        object_type_readable={@object_type_readable}
        object_boundary={@object_boundary}
        parent_id={"object-#{id(@activity_component_id || @activity)}"}
      />
    </li>

    <!-- Delete the activity -->
    <li :if={@object_boundary && @object_type not in [Bonfire.Data.Social.Message] && id(@activity)}>
      <Bonfire.UI.Social.Activity.DeleteObjectLive
        action="Bonfire.Social.Feeds:delete"
        object={@activity}
        object_boundary={@object_boundary}
        object_type_readable={l("from feeds")}
        creator_id={subject_id(@activity, @object)}
        parent_id={"activity-#{id(@activity_component_id || @activity)}"}
        explanation={l(
          "Deleting from feeds means this %{verb} and this %{object} still exist, but this activity won't be discoverable via the local instance's feeds. Remote feeds won't be affected.",
          object: e(@object_type_readable, l("object")),
          verb: @verb
        )}
      />
    </li>

    <#slot {@admin_items} />
  </ul>
</div>