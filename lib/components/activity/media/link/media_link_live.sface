<Bonfire.UI.Common.OpenExternalLinkLive
  id={"media_link-#{@showing_within}-#{id(@media) || random_dom_id()}-via-#{@parent_id}"}
  prompt_external_links={@showing_within == :flags}
>
  <LinkLive
    opts={"data-id": "media_link"}
    to={if !@download_url, do: @media_url || @preview_img}
    class={
      "flex w-full items-center media_container gap-3 hover:bg-base-content/5 overflow-hidden",
      @css_borders || "border rounded-lg border-base-content/10",
      "flex-col items-center": is_binary(@preview_img) and !@small_icon
    }
    target="_blank"
  >
    {#if is_binary(@preview_img)}
      {#if @small_icon}
        <div class="flex place-content-center items-center w-[120px] h-[120px]">
          <LazyImage
            class="rounded-none object-cover rounded-l-lg cursor-pointer m-image h-full"
            src={@preview_img}
            media={@media}
            fallback_icon="ion:newspaper-outline"
          />
        </div>
      {#else}
        <div
          data-id="media_img"
          class="flex relative items-center rounded-t-lg shrink-0 w-full bg-base-content/10 aspect-[1.91/1] place-content-center"
        >
          <div class="w-full flex place-content-center items-center">
            <div
              class="absolute inset-0 backdrop-blur-lg bg-white/30 z-50 rounded-l-lg"
              :if={@cw || Settings.get([Bonfire.UI.Social.Activity.MediaLive, :hide], false, @__context__)}
            />

            <LazyImage
              class="rounded-none object-cover rounded-t-lg cursor-pointer m-image w-full aspect-[1.91/1]"
              src={@preview_img}
              media={@media}
              fallback_icon="ion:newspaper-outline"
            />
          </div>
        </div>
      {/if}
    {#else}
      <div class="flex place-content-center items-center w-[120px] h-[120px]">
        {#case e(@media, :metadata, "favicon", nil) ||
            Bonfire.Files.FaviconStore.favicon_url(@media_url)}
          {#match favicon_url when is_binary(favicon_url)}
            <LazyImage
              class="rounded-none object-cover rounded-t-lg cursor-pointer m-image min-w-8 max-w-[120px] w-auto h-auto"
              src={favicon_url}
              media={@media}
              fallback_icon="ion:newspaper-outline"
            />
          {#match _}
            <#Icon iconify="ion:newspaper-outline" class="w-8 h-8 text-base-content/70" />
        {/case}
      </div>
    {/if}

    <div class="p-2 pt-0 flex flex-col w-full gap-1 flex-1">
      <div data-id="media_title" class="text-base line-clamp-2 font-semibold">
        {Bonfire.Files.Media.media_label(@media) ||
          if @media.media_type == "link", do: e(@media, :path, nil), else: l("View")}
      </div>

      <div class="max-w-full text-sm break-words line-clamp-3 text-base-content/70">
        {raw(Text.maybe_sane_html(Bonfire.Files.Media.description(@media)))}
      </div>
      <div data-id="media_author" class="text-xs pt-2 mt-2 border-t border-base-content/10">
        <!-- <span class="text-sm badge badge-accent rounded bg-accent/30 border-none !text-accent capitalize mr-1">{e(@media, :media_type, nil) || l("link")}</span> -->

        <!-- {e(@media, :metadata, "oembed", "author_name", nil)} -->
        <!--       
        {#case e(@media, :metadata, "oembed", "published", "date-parts", nil)}
          {#match nil}
          {#match []}
          {#match published}
            <span class="text-base-content/70">{published |> DatesTimes.format_date(format: "MMMM d, Y")}</span>
        {/case} -->

        {#case MediaLive.provider(@media)}
          {#match nil}
          {#match provider}
            <div class="flex items-center gap-2">
              <#Icon iconify="ph:globe" class="w-4 h-4 text-base-content/70" />
              <span class="text-base-content/70">{provider}</span>
            </div>
        {/case}
      </div>
      <!-- {e(@media, :metadata, "location", "name", nil)} {e(@media, :metadata, "startDate", nil)} -->
    </div>
  </LinkLive>
</Bonfire.UI.Common.OpenExternalLinkLive>