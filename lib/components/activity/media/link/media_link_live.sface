<LinkLive
  opts={"data-id": "media_link"}
  to={if !@download_url, do: @media_url || @preview_img}
  class="flex w-full border rounded-lg media_container hover:bg-base-content/5 border-base-content/20"
  target="_blank"
>
  <div class="flex w-full items-center gap-3 overflow-hidden">
    <div
      data-id="media_img"
      class="flex relative items-center rounded-l-lg shrink-0 w-[120px] h-[120px] bg-base-content/10 place-content-center"
    >
      <div>
        {#case @preview_img || e(@media, :metadata, "favicon", nil) ||
            Bonfire.Files.FaviconStore.favicon_url(@media_url)}
          {#match preview_img when is_binary(preview_img)}
            <div
              class="absolute inset-0 backdrop-blur-lg bg-white/30 z-50 rounded-l-lg"
              :if={@cw || Settings.get([Bonfire.UI.Social.Activity.MediaLive, :hide], false, @__context__)}
            />
            {#case String.ends_with?(preview_img, ".ico")}
              {#match true}
                <LazyImage
                  class="rounded-none object-cover rounded-l-lg  cursor-pointer m-image w-[36px] h-[36px]"
                  src={preview_img}
                  media={@media}
                  fallback_icon="ion:newspaper-outline"
                />
              {#match _}
                <LazyImage
                  class="rounded-none object-cover rounded-l-lg  cursor-pointer m-image w-[120px] h-[120px]"
                  src={preview_img}
                  media={@media}
                  fallback_icon="ion:newspaper-outline"
                />
            {/case}
          {#match _}
            <#Icon iconify="ion:newspaper-outline" class="w-8 h-8 text-base-content/70" />
        {/case}
      </div>
    </div>
    <div class="px-2 flex flex-col w-full flex-1">
      <div data-id="media_title" class="text-sm font-medium line-clamp-1">
        {Bonfire.Files.Media.media_label(@media) ||
          if @media.media_type == "link", do: e(@media, :path, nil), else: l("View")} ({@media.media_type || l("link")})
      </div>

      <div data-id="media_author" class="text-sm">
        {e(@media, :metadata, "oembed", "author_name", nil)}

        {#case e(@media, :metadata, "oembed", "published", "date-parts", nil)}
          {#match published when is_list(published)}
            <span class="text-base-content/70">{published |> List.flatten() |> Enum.join("-")}</span>
          {#match _}
        {/case}

        {#case MediaLive.provider(@media)}
          {#match nil}
          {#match provider}
            <span class="text-base-content/70">{provider}</span>
        {/case}
      </div>
      <div class="max-w-[420px] text-sm mt-2 break-words line-clamp-2 text-base-content/70">
        {Bonfire.Files.Media.description(@media)}
      </div>
      {!-- {e(@media, :metadata, "location", "name", nil)} {e(@media, :metadata, "startDate", nil)} --}
    </div>
  </div>
</LinkLive>