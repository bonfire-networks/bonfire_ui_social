<div
  :if={@showing_within != :smart_input and is_list(@media) and @media != []}
  x-show="content_open == true"
  class={
    "grid w-full grid-flow-col grid-with-ratio grid-rows-4 gap-1",
    "my-3":
      Enum.filter(@media, fn x -> e(x, :metadata, :canonical_url, false) == false end) |> length > 0,
    "!grid-cols-1 !grid-rows-1": @showing_within == :smart_input,
    "max-h-[270px] overflow-clip": @viewing_main_object != true,
    "grid-cols-1": @media |> length() == 1,
    "grid-cols-2": @media |> length() == 2,
    "grid-cols-4": @media |> length() == 4
  }
>
  {#for {media, counter} <-
      Enum.filter(@media, fn x -> e(x, :metadata, :canonical_url, false) == false end)
      |> Enum.with_index()}
    <article class={
      "media-entry h-full w-full row-span-4 object-cover",
      "h-[270px]":
        Enum.filter(@media, fn x -> e(x, :metadata, :canonical_url, false) != false end) |> length() >
          0,
      "!row-span-2 !h-auto":
        Enum.filter(@media, fn x -> e(x, :metadata, :canonical_url, false) == false end) |> length() ==
          3 && counter != 0,
      "!row-span-2 !col-span-2 !h-auto":
        Enum.filter(@media, fn x -> e(x, :metadata, :canonical_url, false) == false end) |> length() ==
          4
    }>
      <figure class="h-full">
        {#if String.starts_with?(e(media, :media_type, ""), [
            "image",
            "video",
            "embed",
            "audio",
            "song",
            "photo",
            "rich"
          ]) or String.contains?(media_url(media), [".jpg", ".jpeg", ".png", ".gif", ".webp"])}
          <!-- {#if @viewing_main_object}
            <Bonfire.UI.Social.Activity.RemoteMediaLive media={media} />
          {#else} -->
          <Bonfire.UI.Common.OpenModalLive
            id={Pointers.ULID.generate()}
            title_text={e(@label, l("View media"))}
            no_actions
            open_btn_class="w-full"
            open_btn_wrapper_class="w-full h-full"
          >
            <div
              class="relative mt-2"
              style={if String.starts_with?(media.media_type, ["video"]),
                do: "min-width: 90vw; min-height: 90vh",
                else: ""}
            >
              <Bonfire.UI.Social.Activity.RemoteMediaLive media={media} />

              <div class="mt-2">
                {media_label(media)}

                <p class="text-sm">{e(media.metadata, "description", nil) || e(media.metadata, "facebook", "og:description", nil) ||
                    e(media.metadata, "twitter", "twitter:description", nil) ||
                    e(media.metadata, "other", "description", nil)}</p>
              </div>
            </div>

            <:open_btn>
              <LazyImage
                class={
                  "w-full !object-cover media-image h-full cursor-pointer obj-center rounded-md",
                  "max-h-[270px]": @media |> length() < 4,
                  "max-h-[135px]": @media |> length() > 3
                }
                alt={media_label(media)}
                src={preview_img(media) || media_url(media)}
              />
              <figcaption class="sr-only">{media_label(media)}</figcaption>
            </:open_btn>
          </Bonfire.UI.Common.OpenModalLive>
          <!-- {/if} -->
        {#else}
          <a
            href={media_url(media) || preview_img(media)}
            target="_blank"
            class="flex w-full border rounded media_container bg-base-200 hover:bg-base-content/5 border-base-content/10 tooltip tooltip-bottom"
            data-tip={media_label(media)}
          >
            <div class="items-center gap-3 md:flex">
              <div class="flex items-center w-[80px] h-[80px] bg-base-200 bg-base-content/5 place-content-center">
                {#case preview_img(media) || e(media.metadata, "favicon", nil) ||
                    Bonfire.Files.FaviconStore.favicon_url(media_url(media))}
                  {#match nil}
                    <Icon solid="ExternalLink" class="w-8 h-8 text-base-content/70" />
                  {#match image}
                    <img
                      class="rounded-none cursor-pointer media-image"
                      alt={media_label(media)}
                      src={preview_img(media)}
                    />
                {/case}
              </div>
              <div class="flex flex-col items-start content-start justify-start p-3 space-y-1 text-sm text-left">
                <div class="text-base font-medium line-clamp-3">
                  {media_label(media) || l("View media")} ({media.media_type})
                </div>
                <div class="text-sm text-base-content/60" :if={provider(media)}>
                  {provider(media)}
                </div>
                <!-- <div class="break-words line-clamp-2 text-base-content/60" :if={description(media)}>
                  {description(media)}
                </div> -->
              </div>
            </div>
          </a>
        {/if}
      </figure>
    </article>
    <!-- {#else}
      <div class="flex items-center space-x-1 text-xs font-semibold text-base-content/60">
        <Icon outline="Link" class="w-4 h-4"/>
        <span class="flex-1">...{String.slice(media_url(media), -20..-1)}</span>
      </div>
    {/if} -->
  {/for}
</div>

<div :if={@showing_within != :smart_input} class="flex flex-col gap-2">
  {#for link <- Enum.filter(@media, fn x -> e(x, :metadata, :canonical_url, nil) end)}
    <a
      href={media_url(link)}
      target="_blank"
      class="flex w-full mb-2 border rounded-md media_container border-base-content/5 hover:bg-base-content/5"
    >
      <div class="items-center gap-2 md:flex">
        <div class="flex items-center w-[80px] h-[80px] bg-base-200 bg-base-content/5 place-content-center">
          {#case preview_img(link) || e(link.metadata, "favicon", nil) ||
              Bonfire.Files.FaviconStore.favicon_url(media_url(link))}
            {#match nil}
              <Icon solid="ExternalLink" class="w-8 h-8 text-base-content/70" />
            {#match image}
              <img
                class="object-cover w-full h-full rounded-none cursor-pointer rounded-l-md media-image"
                alt={media_label(link)}
                src={preview_img(link)}
              />
          {/case}
        </div>
        <div class="flex flex-col items-start content-start justify-start flex-1 p-3 space-y-1 text-sm text-left">
          <div class="font-medium line-clamp-1">
            {media_label(link) || l("View media")} ({link.media_type})
          </div>
          <div class="text-sm text-base-content/60" :if={provider(link)}>
            {provider(link)}
          </div>
          <!-- <div class="break-words line-clamp-2 text-base-content/60" :if={description(link)}>
            {description(link)}
          </div> -->
        </div>
      </div>
    </a>
  {/for}
</div>