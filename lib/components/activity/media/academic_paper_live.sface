{#case Media.media_url(@media)}
  {#match media_url}
    {#case e(@media.metadata, "download_url", nil)}
      {#match download_url}
        {#case e(debug(@metadata), "DOI", nil) || e(@metadata, "identifiers", "doi", nil) ||
            e(@metadata, "url", "value", nil) || e(@metadata, "url", nil) ||
            e(@media.metadata, "facebook", "og:url", nil)}
          {#match doi}
            <!-- <code>{inspect(@media.metadata, pretty: true)}</code> -->
            <div class={
              "w-full media_container text-base-content",
              "p-4 border border-base-content/20 bg-base-100 rounded-lg": @showing_within != :media
            }>
              <div class="relative w-full">
                {#case e(@metadata, "type", nil) || e(@metadata, "itemType", nil) || e(@metadata, "@type", nil)}
                  {#match nil}
                  {#match type}
                    <span class="text-sm badge badge-accent rounded bg-accent/30 border-none !text-accent capitalize">{type}</span>
                {/case}
                <div class="mt-2 mb-1 text-xs font-semibold text-base-content/70 uppercase">{e(@metadata, "isPartOf", "name", nil) || e(@metadata, "publisher", "name", nil) ||
                    e(@metadata, "publisher", nil) ||
                    e(@metadata, "container-title", nil) || e(@metadata, "publicationTitle", nil) ||
                    e(@metadata, "journal-title", "value", nil)}
                </div>
                <div class="text-xl font-semibold">
                  {Bonfire.Files.Media.media_label(@media) ||
                    if @media.media_type == "link", do: e(@media, :path, nil), else: l("View")}
                </div>

                <div class="text-sm text-left">
                  <div class="">
                    <div class="flex flex-wrap gap-0.5 text-sm text-base-content/80">
                      {#for {author, i} <-
                          Enum.with_index(
                            List.wrap(
                              e(@metadata, "author", []) || e(@metadata, "creators", []) ||
                                e(@metadata, "source", "source-name", "value", [])
                            )
                          )}{if i != 0, do: ","}
                        {e(author, "given", nil) || e(author, "firstName", nil)}
                        {e(author, "family", nil) || e(author, "lastName", nil) || e(author, "name", nil) ||
                          if(is_binary(author), do: author)}{/for}
                    </div>

                    <div class="flex items-center mt-2 mb-4 gap-4">
                      {#case e(@metadata, "created", "date-time", nil) || e(@metadata, "datePublished", nil) ||
                          e(@metadata, "publication-date", nil) || e(@metadata, "date", nil)}
                        {#match nil}
                        {#match published}
                          <div class="text-base-content/70 flex items-center gap-2">
                            <#Icon iconify="material-symbols:date-range-outline" class="w-4 h-4 text-base-content/70" />
                            <span class="font-medium">{published |> DatesTimes.format(format: "MMMM d, Y")}</span>
                          </div>
                      {/case}

                      <div :if={doi} class="text-base-content/70 text-sm flex items-center gap-2">
                        <span>
                          {#case doi}
                            {#match "https://doi.org/" <> doi_id}
                              <a target="blank" class="link" href={doi}>doi:{doi_id}</a>
                            {#match "https://dx.doi.org/" <> doi_id}
                              <a target="blank" class="link" href={doi}>doi:{doi_id}</a>
                            {#match "http" <> _}
                              <!-- <a target="blank" class="link" href={doi}>{doi}</a> -->
                            {#match "doi:" <> doi_id}
                              <a target="blank" class="link" href={"https://doi.org/#{doi_id}"}>{doi}</a>
                            {#match _}
                              <a target="blank" class="link" href={"https://doi.org/#{doi}"}>doi:{doi}</a>
                          {/case}
                        </span>
                      </div>
                    </div>

                    <div class="flex flex-wrap gap-2">
                      {#for subject <- List.wrap(e(@metadata, "subject", []))}
                        <span class="text-sm badge badge-info bg-info/30 border-none !text-info">#{subject}</span>
                      {/for}
                    </div>

                    <div class="mt-2 text-sm text-justify text-base-content/90 line-clamp-5 break-words">
                      {Bonfire.Files.Media.description(@media) |> Text.text_only()}
                    </div>
                    {!-- {e(@metadata, "subject", nil)} --}
                  </div>
                </div>
              </div>
              <div class="flex gap-2 items-center mt-4">
                <a
                  :if={download_url && download_url != media_url}
                  href={download_url}
                  class="btn btn-outline border-base-content/30  btn-sm flex-1 rounded-full"
                  target="_blank"
                >
                  <#Icon iconify="pajamas:import" class="w-5 h-5 text-base-content/70" />
                  <span>{l("Download")}</span>
                </a>

                <LinkLive
                  :if={not String.starts_with?(media_url, "doi:") and URIs.is_uri?(media_url)}
                  to={media_url}
                  class="btn btn-outline border-base-content/30  btn-sm rounded-full flex-1"
                  target="_blank"
                >
                  <#Icon iconify="heroicons-outline:external-link" class="w-5 h-5 text-base-content/70" />
                  <span>{l("Read paper")}</span>
                </LinkLive>
              </div>
            </div>
        {/case}
    {/case}
{/case}