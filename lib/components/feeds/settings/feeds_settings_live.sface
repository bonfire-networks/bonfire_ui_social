<div class="flex flex-col">
  <div class="flex flex-col gap-1 py-6 p-4">
    <div class="text-xl font-semibold">{l("Feed presets")}</div>
    <div class="text-base-content/70">{l("Decide which feed you want to show in your sidebar.")}</div>
  </div>

  {!-- <div class="flex flex-col gap-2 divide-y divide-base-content/10">
    <div x-data="{open: false}" class="p-4">
      <div x-on:click="open = !open" class="flex items-center justify-between gap-4 cursor-pointer">
        <div class="flex flex-col gap-1">
          <div class="text-sm font-medium">{l("Sidebar navigation")}</div>
          <div class="text-sm font-light text-base-content/70">{l("Here you can decide which feed presets you want to list in your navigation sidebar")}</div>
        </div>

        <button type="button" x-cloak class="btn btn-circle btn-sm btn-ghost" x-show="open">
          <#Icon iconify="ph:caret-down-duotone" class="w-3 h-3 text-base-content/70" />
        </button>
        <button type="button" class="btn btn-circle btn-sm btn-ghost" x-show="!open">
          <#Icon iconify="ph:caret-up-duotone" class="w-3 h-3 text-base-content/70" />
        </button>
      </div>
      <div x-show="open" x-cloak x-collapse> --}
  <ul class="flex flex-col bg-base-100 menu-sm w-full">
    {#for {preset, index} <- Enum.with_index(@presets || [])}
      <li class="relative border-b border-base-content/10">
        {!-- TODO? Draggable handle outside Alpine component --}
        {!-- <div
                data-sortable-handler
                class="absolute left-0 top-0 bottom-0 w-23 flex items-center place-content-center border-r border-base-content/10"
              >
                <#Icon iconify="ic:baseline-drag-indicator" class="w-5 h-5" />
              </div> --}

        <div class="flex-col items-start flex w-full p-3">
          <div class="flex gap-3 lg:items-center flex-1 w-full justify-between">
            <div class="flex flex-1 items-center gap-3">
              <div class="flex items-center gap-3">
                <Iconify.iconify icon={preset[:icon] || "ic:baseline-rss-feed"} class="w-7 h-7 opacity-70" />
                <div class="flex flex-col gap-0 flex-1">
                  <div class="font-medium text-sm">{preset[:name] || preset[:description] || preset.id}</div>
                  <div class="text-sm text-base-content/70">{preset[:description]}</div>
                </div>
                {!-- <div class="text-xs text-base-content/50 mt-1 flex gap-2 flex-wrap">
                        {#if preset[:current_user_required]}
                          <span class="badge badge-info badge-soft badge-sm">{l("Requires login")}</span>
                        {/if}
                        {#if preset[:filters][:feed_name]}
                          <span class="badge badge-sm badge-secondary badge-soft">{preset.filters.feed_name}</span>
                        {/if}
                        {#if preset[:filters][:creators]}
                          <span class="badge badge-sm badge-info badge-soft">By: {Enum.join(preset.filters.creators, ", ")}</span>
                        {/if}
                        {#if preset[:filters][:media_types]}
                          <span class="badge badge-sm badge-info badge-soft">Media: {Enum.join(preset.filters.media_types, ", ")}</span>
                        {/if}
                      </div> --}
              </div>
            </div>
            <div class="flex items-center gap-2">
              <!-- TODO: enable subscribing to feeds that require auth, maybe by generating a single-use token? -->
              <div :if={!preset[:current_user_required] and
                module_enabled?(Bonfire.UI.Social.SubscribeFeedLive, @__context__)}>
                <Bonfire.UI.Social.SubscribeFeedLive feed_name={preset.id} as_icon />
              </div>
              <button
                :if={!preset[:built_in]}
                phx-click="Bonfire.Social.Feeds:preset_delete"
                phx-value-id={preset.id}
                class="btn btn-circle btn-error btn-sm btn-ghost text-error-content"
              >
                <#Icon iconify="ph:trash-bold" class="w-4 h-4" />
                <span class="sr-only">{l("Delete")}</span>
              </button>
              {#if preset[:exclude_from_nav] == false}
                <button
                  phx-click="Bonfire.Social.Feeds:preset_nav_toggle"
                  phx-value-id={preset.id}
                  phx-value-exclude="true"
                  class=""
                >
                  <input type="checkbox" checked class="checkbox checkbox-primary">
                  <span class="sr-only">{l("Include in the sidebar")}</span>
                </button>
              {#else}
                <button
                  phx-click="Bonfire.Social.Feeds:preset_nav_toggle"
                  phx-value-id={preset.id}
                  phx-value-exclude="false"
                  class=""
                >
                  <input type="checkbox" class="checkbox checkbox-primary">
                  <span class="sr-only">{l("Include in the sidebar")}</span>
                </button>
              {/if}
              {!-- <form phx-change="Bonfire.Social.Feeds:preset_nav_toggle" phx-value-id={preset.id}>
                      <label>
                        <input type="checkbox" name="show_in_nav" checked={preset[:exclude_from_nav] == false}>
                        <span>{l("Show in navigation menu")}</span>
                      </label>
                    </form> --}
            </div>
          </div>
        </div>
      </li>
    {/for}
  </ul>
  <!-- </div>
    </div> -->

  {!-- <form phx-change="Bonfire.Common.Settings:set">
      <Bonfire.UI.Common.SettingsToggleLive
        name={l("Simplified feed filters")}
        description={l(
          "Simplified feed controls are more compact and allow switching between different types of activities, but you can still expand the full feed controls to show all options and filters."
        )}
        keys={[Bonfire.UI.Social, :use_lite_feed_controls]}
        scope={@scope}
        default_value={Settings.get([Bonfire.UI.Social, :use_lite_feed_controls], true, context: @__context__)}
      />
    </form> --}

  {!-- <div
      :if={Settings.get([Bonfire.UI.Social, :use_lite_feed_controls], true, context: @__context__)}
      x-data="{open: false}"
      class="p-4"
    >
      <div x-on:click="open = !open" class="flex items-center justify-between gap-4 cursor-pointer">
        <div class="flex flex-col gap-1">
          <div class="text-sm font-medium">{l("Activity and content types")}</div>
          <div class="text-sm font-light text-base-content/70">{l("Here you can decide which activity and content types you want to include in your feed control tab")}</div>
        </div>

        <button type="button" x-cloak class="btn btn-circle btn-sm btn-ghost" x-show="open">
          <#Icon iconify="ph:caret-down-duotone" class="w-3 h-3 text-base-content/70" />
        </button>
        <button type="button" class="btn btn-circle btn-sm btn-ghost" x-show="!open">
          <#Icon iconify="ph:caret-up-duotone" class="w-3 h-3 text-base-content/70" />
        </button>
      </div>
      <div x-show="open" x-cloak x-collapse>
      </div>
    </div> --}
  <!-- </div> -->
</div>