<div
  id={@id}
  role="feed"
  aria-live="assertive"
  aria-atomic="true"
  class="feed">
    <div class="flex flex-col mx-auto max-w-7xl">

      <!-- <Bonfire.UI.Common.LoadPreviousLive 
        :if={e(assigns, :hide_load_more, false) != true}
        live_handler={Bonfire.Social.Feeds} 
        page_info={@page_info} 
        target={@myself} 
      /> -->
      {#if length(@feed) > 0}
      <div 
        id={"feed:#{e(assigns, :feed_id, @id)}"} 
        data-id="feed" 
        phx-update={e(assigns, :feed_update_mode, "append")} 
        class="divide-y divide-base-content divide-opacity-10">
        {#for entry <- @feed}
          {#case "#{e(assigns, :feed_id, @id)}-"<>( e(entry, :id, nil) || e(entry, :activity, :id, nil) || e(entry, :object, :id, nil) || Pointers.ULID.generate())}
            {#match cid}
              <div
                id={cid}
                >
                <ActivityLive 
                  id={cid}
                  activity={e(entry, :activity, nil) || e(entry, :edge, nil) || entry}
                  showing_within={e(assigns, :showing_within, nil)}
                  verb_default={e(assigns, :verb_default, nil)}
                  feed_id={e(assigns, :feed_id, nil)}
                  />
              </div>
            {#match _}
          {/case}
        {/for}
      </div>
      {#else}
        <div id="empty-feed" class="flex items-center my-12 place-content-center">
          <Bonfire.UI.Common.EmptyFeed
            feedback_title={e(assigns, :feedback_title, nil)}
            feedback_message={e(assigns, :feedback_message, nil)}
          /> 
        </div>
      {/if}
      <Bonfire.UI.Common.LoadMoreLive 
        :if={e(assigns, :hide_load_more, false) != true}
        live_handler={Bonfire.Social.Feeds} 
        page_info={@page_info} 
        target={@myself} 
      />

    </div>
</div>
