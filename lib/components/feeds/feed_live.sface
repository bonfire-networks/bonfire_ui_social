<div
  id={@id}
  data-id="feed"
  role="feed"
  aria-live="assertive"
  aria-atomic="true"
  class="w-full flex flex-col feed flex-1 h-full grow"
>
  <div class="flex flex-col h-full grow">
    <Bonfire.UI.Common.TabsLive
      :if={@hide_tabs != true or (@top_page == "home" and @feed_name != :my)}
      type={if @feed_name in [nil, :my], do: :static, else: :with_header}
      selected_tab={@selected_tab}
      selected_name={@feed_title || @page_title}
      class={
        "flex items-center gap-2 w-full tabs sticky top-0 z-[9999999] backdrop-blur-sm bg-base-100/70",
        "h-[56px]": @feed_name in [nil, :my],
        "border-b border-base-content/20": @feed_name in [:explore, :fediverse, :local, :curated]
      }
      tab_class={@tab_class}
      item_class={@item_class}
      tab_primary_class={@tab_primary_class}
      link_component={@tab_link_component}
      tabs={tabs(@top_page, @__context__)}
      event_handler={@event_handler}
      event_target={@myself}
      path_prefix={@tab_path_prefix}
      path_suffix={@tab_path_suffix}
    >
      <!-- <Bonfire.UI.Social.FeedControlsLive
        :if={@feed_name in [nil, :my, :local, :fediverse, :explore] and current_user_id(@__context__)}
        event_target={@myself}
        feed_id={@feed_id}
        sort_by={@sort_by}
        time_limit={@time_limit}
        sort_order={@sort_order}
        showing_within={@showing_within}
      /> -->
    </Bonfire.UI.Common.TabsLive>

    <div
      :if={@hide_fresh != 0}
      id="show_fresh"
      @click="window.scrollTo({top: 0, behavior: 'smooth'})"
      phx-click={JS.show(to: ".fresh_hidden")
      |> JS.add_class("hidden")}
      class="flex justify-center w-full p-3 mx-auto sticky top-[60px] z-[99999999999999]"
      phx-show={JS.remove_class("hidden")}
    >
      {!-- style={if @hide_fresh==0, do: "display: none;", else: ""} --}
      <btn class="normal-case btn btn-xs rounded-full btn-primary">
        <#Icon iconify="mdi:arrow-up" class="w-4 h-4" />
        {!-- |> JS.push("hide_fresh", target: @myself) --}
        {l("Show more recent")}
        {!-- {"(#{@hide_fresh})"} --}
      </btn>
    </div>

    {#if @feed_count || e(@streams.feed, :inserts, []) != []}
      <div
        id={"feed_#{@feed_name || @feed_id || @id}"}
        data-id="feed_activity_list"
        phx-update="stream"
        class="flex flex-col divide-y divide-base-content/20 bonfire_feed flex-1 h-full grow"
      >
        {!-- phx-update={e(@feed_update_mode, "append")} --}
        {#for {entry_id, entry} <- @streams.feed}
          {!-- id={"f-#{@feed_id || @id}-a-#{i}"} --}
          <div
            id={entry_id}
            :if={@hide_activities != "component"}
            class={
              "activity_wrapper",
              "infinite_scroll_hidden hidden": @hide_activities == "infinite_scroll",
              "fresh_hidden hidden": @hide_fresh != 0
            }
          >
            {!-- id={"activity-#{component_id(@feed_id || @id, entry)}"} --}
            <ActivityLive
              id={ActivityLive.component_id(
                id(entry) || e(entry, :activity, :id, nil) || e(entry, :object, :id, nil) ||
                  e(entry, :edge, :id, nil),
                "s_activity_#{entry_id}"
              )}
              activity={get_activity(entry)}
              showing_within={@showing_within}
              verb_default={@verb_default}
              feed_id={@feed_id}
              is_remote={@feed_name in [:fediverse]}
              hide_activity={@hide_activities}
              subject_user={@subject_user}
              activity_loaded_preloads={@activity_loaded_preloads}
            />
          </div>
        {/for}
      </div>
    {#elseif is_list(@feed) and @feed != []}
      <div
        id={"feed_#{@feed_name || @feed_id || @id}"}
        data-id="feed_activity_list"
        phx-update="append"
        class="flex flex-col divide-y divide-base-content/20"
      >
        {!-- phx-update={e(@feed_update_mode, "append")} --}
        {#for {entry, i} <- Enum.with_index(@feed)}
          <div id={"f_#{@feed_id || @id}_a_#{i}"} :if={@hide_activities != "component"}>
            <ActivityLive
              id={ActivityLive.component_id(
                id(entry) || e(entry, :activity, :id, nil) || e(entry, :object, :id, nil) ||
                  e(entry, :edge, :id, nil),
                "f_activity_#{@feed_name || @feed_id || @id}_#{i}"
              )}
              activity={get_activity(entry)}
              showing_within={@showing_within}
              verb_default={@verb_default}
              feed_id={@feed_id}
              hide_activity={@hide_activities}
              subject_user={@subject_user}
              activity_loaded_preloads={@activity_loaded_preloads}
            />
          </div>
        {/for}
      </div>
    {/if}

    {!-- context={@id} --}
    <Bonfire.UI.Common.LoadMoreLive
      live_handler={Bonfire.Social.Feeds}
      page_info={@page_info}
      target={@myself}
      infinite_scroll={Settings.get([:ui, :infinite_scroll], :preload, @__context__)}
      hide_load_more={@hide_load_more}
      entry_count={@feed_count}
    >
      <:if_no_more>
        {#if is_nil(@previous_page_info)}
          {#if @loading}
            <div class="flex flex-col items-center gap-3 py-12 place-content-center">
              <img src={Bonfire.Web.Endpoint.static_path("/images/loading.svg")}>
              <div class="sr-only text-base-content">{l("Loading...")}</div>
            </div>
            {!-- {#case maybe_cute_gif()}
                {#match url when is_binary(url)}
                  <div class="flex flex-row items-center justify-center my-12">
                    <img src={url}>
                  </div>
                {#match _}
              {/case} --}
          {#elseif !(is_list(@feed) and @feed != [])}
            <div data-id="empty-feed" class="flex items-center place-content-center">
              <Bonfire.UI.Common.EmptyFeed
                feed_name={@feed_name}
                feedback_title={@feedback_title}
                feedback_message={@feedback_message}
                empty_feed={@bottom_or_empty_feed}
              />
            </div>
          {/if}
        {#else}
          {#if is_integer(@time_limit) and @time_limit != 0}
            <div class="">
              <p class="text-sm py-4 mt-4 text-center text-base-content/70 font-medium">{lp("That's all for today...", "That's all for the last %{number} days...", @time_limit,
                  number: @time_limit
                )}</p>

              {!-- TODO: instead of switching to infinity, switch 1 level up from current limit, eg. from day to week --}
              {#if !@sort_by and
                  (e(@previous_page_info, :end_cursor, nil) || e(@page_info, :end_cursor, nil)) |> debug("ppppp")}
                <Bonfire.UI.Common.LoadMoreLive
                  live_handler={Bonfire.Social.Feeds}
                  page_info={@page_info || @previous_page_info}
                  target={@myself}
                  hide_guest_fallback={@hide_guest_fallback}
                  label={l("Show older activities")}
                  opts={%{"phx-value-time_limit" => 0}}
                  hide_if_no_more
                />
              {#else}
                <div :if={socket_connected?(@__context__)} class="w-full flex items-center justify-center mb-4">
                  <button
                    class="normal-case btn btn-outline rounded-full btn-primary !border !border-primary/30"
                    phx-click="set"
                    phx-value-to_integers="true"
                    phx-value-time_limit={0}
                    phx-value-assign_global="true"
                    phx-target={@myself}
                  >
                    {l("Show older activities")}
                  </button></div>
              {/if}
            </div>
          {#else}
            <p class="text-sm font-medium text-base-content/70 text-center my-4">{l("That's all folks...")}</p>
          {/if}
        {/if}
      </:if_no_more>
    </Bonfire.UI.Common.LoadMoreLive>

    <div :if={@bottom_or_empty_feed} class="mt-1 mb-2 text-center text-base-content">
      <#slot {@bottom_or_empty_feed}>
      </#slot>
    </div>
  </div>
</div>
