<div class="flex flex-col gap-1 w-full">
  {!-- <span class="font-semibold mt-2 uppercase text-xs text-base-content/60 pb-2 border-b border-base-content/10 mb-2">{l("Federation")}</span> 
   <div class="flex items-center gap-2">
    <button
      class="btn btn-soft btn-secondary btn-sm rounded-full"
      phx-click="set_filter"
      phx-value-origin={:local}
      phx-target={@event_target}
    >{l("Local")}</button>
    <button
      class="btn btn-soft btn-secondary btn-sm rounded-full"
      phx-click="set_filter"
      phx-value-origin={:remote}
      phx-target={@event_target}
    >{l("Remote")}</button>
    <button
      class="btn btn-soft btn-secondary btn-sm rounded-full"
      phx-click="set_filter"
      phx-value-origin={:all}
      phx-target={@event_target}
    >{l("All")}</button>
  </div> --}

  {!-- <span class="font-semibold mt-4 uppercase text-xs text-base-content/60 pb-2 border-b border-base-content/10 mb-2">{l("By Circles")}</span> 

   <div class="flex items-center gap-2 mb-6 w-full flex-1 flex-wrap">
    <button
      :for={circle <-
        Bonfire.UI.Boundaries.SetBoundariesLive.circles_for_multiselect(
          @__context__,
          :subject_circles
        )}
      type="button"
      phx-click="set_filter"
      phx-value-subject_circles={elem(circle, 1)[:id]}
      phx-target={@event_target}
      class={
        "btn btn-soft btn-secondary btn-sm rounded-full",
        "btn-active": elem(circle, 1)[:id] in List.wrap(e(@feed_filters, :subject_circles, []))
      }
    >
      {elem(circle, 1)[:name]}
    </button>
  </div> --}

  <span class="font-semibold uppercase text-xs text-base-content/60 pt-3 border-t border-base-content/10 mb-2">{l("Filter by types")}</span>
  <div :if={extension_enabled?(:bonfire_ui_reactions, @__context__)} data-scope="boosts">
    <Bonfire.UI.Social.ToggleTypeLive
      label={l("Boosts")}
      icon="lucide:refresh-cw"
      key={:boost}
      field={:activity_types}
      feed_filters={@feed_filters}
      event_target={@event_target}
      event_name={@event_name}
      label_default={l("Include")}
    />
  </div>

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Follows")}
    icon="flowbite:user-add-solid"
    key={:follow}
    field={:activity_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <!-- <Bonfire.UI.Social.ToggleTypeLive label={l("Likes")} key={:like} field={:activity_types} feed_filters={@feed_filters}  event_target={@event_target}  event_name={@event_name} /> -->

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("All posts")}
    icon="dashicons:text-page"
    key={:post}
    field={:object_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Articles")}
    icon="icomoon-free:blog"
    key={:article}
    field={:object_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Replies")}
    icon="mingcute:comment-fill"
    key={:reply}
    field={:activity_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Links")}
    icon="mdi:link"
    key={:link}
    field={:media_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Images")}
    icon="ic:round-image"
    key={:image}
    field={:media_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Videos")}
    icon="majesticons:video"
    key={:video}
    field={:media_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Audio")}
    icon="lucide:audio-lines"
    key={:audio}
    field={:media_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Books")}
    icon="mdi:bookshelf"
    key="Edition"
    field={:object_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Events")}
    icon="mingcute:paper-fill"
    key={:Event}
    field={:object_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  <Bonfire.UI.Social.ToggleTypeLive
    label={l("Research publications")}
    icon="ph:calendar-blank-bold"
    key={:research}
    field={:media_types}
    feed_filters={@feed_filters}
    event_target={@event_target}
    event_name={@event_name}
    label_default={l("Include")}
  />

  {#for key <- @feed_filters[:subject_types] || []}
    <Bonfire.UI.Social.ToggleTypeLive
      icon="mingcute:users-fill"
      label={String.capitalize(to_string(key))}
      key={key}
      field={:subject_types}
      feed_filters={@feed_filters}
      event_target={@event_target}
      event_name={@event_name}
      label_default={l("Include")}
    />
  {/for}

  {#for key when key not in [:boost, :follow, :reply] <- @feed_filters[:activity_types] || []}
    <Bonfire.UI.Social.ToggleTypeLive
      icon="heroicons-outline:eye"
      label={String.capitalize(to_string(key))}
      key={key}
      field={:activity_types}
      feed_filters={@feed_filters}
      event_target={@event_target}
      event_name={@event_name}
      label_default={l("Include")}
    />
  {/for}

  {#for key when key not in [:post, "post", Bonfire.Data.Social.Post, :Event, "Event", "Edition"] <-
      @feed_filters[:object_types] || []}
    <Bonfire.UI.Social.ToggleTypeLive
      icon="fluent:box-16-regular"
      label={String.capitalize(to_string(key))}
      key={key}
      field={:object_types}
      feed_filters={@feed_filters}
      event_target={@event_target}
      event_name={@event_name}
      label_default={l("Include")}
    />
  {/for}

  {#for key
    when key not in [
           :image,
           :link,
           :audio,
           :video,
           :research,
           "image",
           "link",
           "audio",
           "video",
           "research"
         ] <- @feed_filters[:media_types] || []}
    <Bonfire.UI.Social.ToggleTypeLive
      icon="octicon:file-media-24"
      label={String.capitalize(to_string(key))}
      key={key}
      field={:media_types}
      feed_filters={@feed_filters}
      event_target={@event_target}
      event_name={@event_name}
      label_default={l("Include")}
    />
  {/for}
</div>

{!-- <div :if={:sort_by not in @hide_filters} class="flex flex-col gap-2 pt-3 w-full">
  <span class="font-semibold uppercase text-xs text-base-content/60 pb-2 border-b border-base-content/10 mb-2">{l("Sort by")}</span>
  <StatelessComponent
    module={maybe_component(Bonfire.UI.Social.SortItemsLive, @__context__)}
    scope={:user}
    feed_name={@feed_name}
    event_name={@event_name}
    event_target={@event_target}
    sort_by={e(@feed_filters, :sort_by, nil)}
    compact
  />
</div> --}
