<div class="w-full">
  <div :if={current_user_id(@__context__)} class="flex justify-between flex-1 gap-1 w-full">
    <StatelessComponent
      :if={@show_sort_dropdown}
      module={maybe_component(Bonfire.UI.Social.SortItemsDropdownLive)}
      feed_filters={@feed_filters}
      event_target={@event_target}
    />

    <div data-position="bottom" phx-hook="Tooltip" class="relative" id="filter_origin_feed">
      <label
        tabindex="0"
        class={
          "tooltip-button btn w-full capitalize",
          "opacity-50 cursor-not-allowed": @preset_has_fixed_origin
        }
      >
        {case @preset_has_fixed_origin do
          true ->
            case @preset_origin do
              :remote -> l("Only Remote")
              :local -> l("Only Local")
              _ -> l("Federated")
            end

          false ->
            case @feed_filters[:origin] do
              [:remote] -> l("Only Remote")
              [:local] -> l("Only Local")
              :remote -> l("Only Remote")
              :local -> l("Only Local")
              _ -> l("Federated")
            end
        end}
      </label>
      <ul
        :if={not @preset_has_fixed_origin}
        tabindex="0"
        class="tooltip z-[999] menu bg-base-100 shadow-lg border rounded-xl border-base-content/10  w-52 absolute top-0 left-0 hidden"
      >
        <li><a
            phx-click="set_filter"
            phx-value-origin={:local}
            phx-target={@event_target}
            class="flex gap-3 px-2 text-base-content"
          >
            {l("Only Local")}</a>
        </li>
        <li><a
            phx-click="set_filter"
            phx-value-origin={:remote}
            phx-target={@event_target}
            class="flex gap-3 px-2 text-base-content"
          >
            {l("Only Remote")}</a></li>
        <li><a
            phx-click="set_filter"
            phx-value-origin={:all}
            phx-target={@event_target}
            class="flex gap-3 px-2 text-base-content"
          >
            {l("Federated")}</a></li>
      </ul>
      <div
        :if={@preset_has_fixed_origin}
        class="tooltip z-[999] bg-base-100 shadow-lg border rounded-xl border-base-content/10 p-3 w-52 absolute top-0 left-0 hidden"
      >
        <p class="text-sm text-base-content/70">
          {l("Origin filter is fixed for this feed preset")}
        </p>
      </div>
    </div>

    <div :if={@show_circles_button} class="flex-1 relative" id="filter_circles_feed">
      <label tabindex="0" class="btn w-full capitalize" phx-click={JS.toggle(to: "#open_circles")}>
        <span class="hidden lg:flex">{l("By circles")}</span>
        <span class="lg:hidden"><#Icon iconify="rivet-icons:circle" class="w-4 h-4" /></span>
        <span>{case e(@feed_filters, :subject_circles, []) do
            [] -> nil
            circles -> "(#{length(circles)})"
          end}</span>
      </label>
    </div>
  </div>
</div>