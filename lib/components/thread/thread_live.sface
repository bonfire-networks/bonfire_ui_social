{#if length(@threaded_replies || @replies || []) > 0}
  <div class="flex flex-col flex-1">
    <div
      data-id="replies"
      class={
        "flex flex-col flex-1",
        "!pt-0": @thread_mode == :flat
      }
    >
      <!-- <Bonfire.UI.Social.LoadPreviousLive 
        live_handler={Bonfire.Social.Posts}
        page_info={@page_info}
        target={@myself}
        context={@thread_id}
      /> -->

      {#if @threaded_replies}
        {#for {reply, child_replies} <- @threaded_replies}
          <Bonfire.UI.Social.CommentLive
            comment={reply}
            child_replies={child_replies}
            reply_to_id={e(reply, :id, nil)}
            thread_id={@thread_id}
            feed_id={@feed_id}
            thread_object={@object}
            thread_level={1}
            thread_mode={@thread_mode}
            smart_input_opts={@smart_input_opts}
            url={@url}
            showing_within={e(@showing_within, :thread)}
          />
        {/for}
      {#else}
        {#for reply <- @replies}
          <Bonfire.UI.Social.CommentLive
            comment={reply}
            reply_to_id={e(reply, :id, nil)}
            thread_id={@thread_id}
            feed_id={@feed_id}
            thread_object={@object}
            thread_mode={@thread_mode}
            smart_input_opts={@smart_input_opts}
            url={@url}
            showing_within={e(@showing_within, :thread)}
          />
        {/for}
      {/if}

      <Bonfire.UI.Common.LoadMoreLive
        live_handler={Bonfire.Social.Posts}
        page_info={@page_info}
        target={@myself}
        context={@thread_id}
      />
    </div>
  </div>
{#else}
  <div class="flex flex-col items-center w-full rounded-md bg-base-100 place-content-center">
    {#if @loading}
      <div class="flex items-center place-content-center">
        Loading...
      </div>
      {#case maybe_cute_gif()}
        {#match url when is_binary(url)}
          <div class="flex flex-row items-center justify-center my-12">
            <img src={url}>
          </div>
        {#match _}
      {/case}
    {#else}
      {#if not is_nil(@current_user) and @showing_within != :messages}
        <!-- <Bonfire.UI.Common.SmartInputButtonLive
          component={Bonfire.Common.Config.get([:ui, :default_smart_input]) ||
            Bonfire.UI.Social.WritePostContentLive}
          smart_input_opts={[reply_to_id: @thread_id, thread_id: @thread_id]}
          prompt={l("Be the first to reply")}
          class="my-12 h-[40px] flex items-center gap-2 normal-case btn-sm btn"
          icon="heroicons-outline:reply"
        /> -->

        <Bonfire.UI.Social.Activity.ReplyLive
          object_id={ulid(@object)}
          activity_id={ulid(Bonfire.UI.Social.Activity.ActionsLive.the_activity(@activity, @object))}
          object_boundary={@object}
          thread_mode={@thread_mode}
          replied={e(Bonfire.UI.Social.Activity.ActionsLive.the_activity(@activity, @object), :replied, nil)}
          showing_within={@showing_within}
          class="my-12 h-[40px] flex items-center gap-2 normal-case btn-sm btn"
          reply_btn_text={l("Be the first to reply")}
          cannot_reply_text={l("No replies yet...")}
        />
      {#else}
        <span class="my-12 badge">
          {l("No replies yet...")}
        </span>
      {/if}
    {/if}
  </div>
{/if}