<div
  class={"border-t border-base-content/10": !current_user_id(@__context__)}
  data-role="thread"
  data-sorted={Settings.get([Bonfire.UI.Social.ThreadLive, :sort_by], nil, @__context__)}
  id={"thread_#{@id}"}
  x-data="{show_replies: true}"
>
  <Bonfire.UI.Social.Activity.ThreadStatsLive
    :if={socket_connected?(@__context__)}
    event_target={@myself}
    showing_within={@showing_within}
    reply_count={@reply_count}
    participant_count={@participant_count}
    participants={@participants}
    last_reply_id={@last_reply_id}
    thread_boost_count={@thread_boost_count}
  >
    <Bonfire.UI.Social.ThreadControlsLive
      event_target={@myself}
      thread_id={@thread_id}
      thread_mode={@thread_mode}
      sort_by={@sort_by}
      sort_order={@sort_order}
      showing_within={@showing_within || :thread}
    />
  </Bonfire.UI.Social.Activity.ThreadStatsLive>


  <!-- {#if @loading != true && @replies == []}
    <Bonfire.UI.Common.EmptyFeed 
      feedback_title={l("No replies yet")}
      feedback_message={l("Be the first to reply!")}
    />
  {/if} -->

  {#if @loading != true || @replies != []}
    <div class="flex flex-col flex-1">
      <div data-id="replies" class="flex flex-col flex-1">
        <Bonfire.UI.Common.LoadPreviousLive
          live_handler={Bonfire.Social.Threads}
          page_info={@page_info}
          target={@myself}
          context={@thread_id}
        />

        {!-- flat mode simple list (use for manually set assigns, like the clicked comment while the thread is loading) --}
        {#for reply <- @replies || []}
          <div data-role="comment-list" class="reply flex relative w-full mx-auto">
            <CommentLive
              comment={reply}
              thread_id={@thread_id}
              feed_id={@feed_id}
              current_url={@current_url}
              thread_object={@object}
              thread_mode={@thread_mode}
              showing_within={@showing_within || :thread}
              activity_inception={@activity_inception}
              activity_loaded_preloads={@activity_loaded_preloads}
            />
          </div>
        {/for}

        {#if @thread_mode != :flat}
          <div id={"stream_#{@id}"} phx-update="stream">
            {#for {entry_id, {reply, child_replies}} <- @streams.threaded_replies}
              <ThreadBranchLive
                id={entry_id}
                comment={reply}
                index={0}
                threaded_replies={child_replies}
                thread_id={@thread_id}
                feed_id={@feed_id}
                current_url={@current_url}
                thread_object={@object}
                thread_mode={@thread_mode}
                showing_within={@showing_within || :thread}
                activity_inception={@activity_inception}
                activity_loaded_preloads={@activity_loaded_preloads}
              />
            {/for}
          </div>
        {#else}
          {!-- flat mode stream --}
          <div id={"stream_#{@id}"} phx-update="stream">
            {#for {entry_id, reply} <- @streams.replies}
              <div id={entry_id} data-role="comment-flat" class="reply flex relative w-full mx-auto">
                <CommentLive
                  comment={reply}
                  thread_id={@thread_id}
                  feed_id={@feed_id}
                  current_url={@current_url}
                  thread_object={@object}
                  thread_mode={debug(@thread_mode, "thread_modessss")}
                  showing_within={@showing_within || :thread}
                  activity_inception={@activity_inception}
                  activity_loaded_preloads={@activity_loaded_preloads}
                />
              </div>
            {/for}
          </div>
        {/if}

        <Bonfire.UI.Common.LoadMoreLive
          live_handler={Bonfire.Social.Threads}
          page_info={@page_info}
          target={@myself}
          context={@thread_id}
        >
          <:if_no_more>
            <div class="flex flex-col items-center w-full place-content-center">
              {#if @loading}
                <div class="flex items-center mt-8 place-content-center">
                  <img src={Bonfire.Common.URIs.static_path("/images/loading.svg")}>
                  <span class="sr-only">Loading...</span>
                </div>
              {#else}
              {/if}
            </div>
          </:if_no_more>
        </Bonfire.UI.Common.LoadMoreLive>
      </div>
    </div>
  {/if}
</div>