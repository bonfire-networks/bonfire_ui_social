<div data-role="thread" id={"thread_#{@id}"} x-data="{show_replies: true}">
  <div :if={current_user(@__context__)} class="p-3 border-b border-base-content/20">
    <div class="flex items-center justify-between">
      <span class="text-sm font-medium text-base-content/70">{l "Discussion"}</span>
     
      <div class="flex items-center gap-3">
        <div class="dropdown dropdown-end">
          <label
            tabindex="0"
            class="rounded-full btn btn-ghost btn-sm btn-circle normal-case"
          >
            <#Icon iconify="tabler:layout-rows" class="w-5 h-5 text-base-content/70" />
            <!-- {l("Layout:")}
            {#if @thread_mode == :flat}
              {l("Linear")}
            {#else}
              {l("Nested replies")}
            {/if} -->

            <!-- {#if @__context__[:ui_compact]}
              {l("Compact")}
            {#else}
              {l("Cozy")}
            {/if} -->
          </label>
          <ul
            tabindex="0"
            class="dropdown-content mt-1 z-[999] menu gap-1 p-1 shadow bg-base-100 rounded-box w-52"
          >
              <li phx-click="set" phx-value-to_atoms="true" phx-value-thread_mode="nested" phx-target={@myself}>
                <a class={"text-base-content/70", "active !text-base-content/100 font-semibold": @thread_mode != :flat }>{l("Nested replies")}</a>
              </li>
            
              <li phx-click="set" phx-value-to_atoms="true" phx-value-thread_mode="flat" phx-target={@myself}>
                <a class={"text-base-content/70", "active !text-base-content/100 font-semibold": @thread_mode == :flat }>{l("Linear")}</a>
              </li>
            
            <!-- {#if @__context__[:ui_compact]}
              <li
                phx-click="set"
                phx-value-to_atoms="true"
                phx-value-ui_compact="false"
                phx-value-assign_global="true"
                phx-target={@myself}
              ><a>{l("Cozy")}</a></li>
            {#else}
              <li
                phx-click="set"
                phx-value-to_atoms="true"
                phx-value-ui_compact="true"
                phx-value-assign_global="true"
                phx-target={@myself}
              ><a>{l("Compact")}</a></li>
            {/if} -->
          </ul>
        </div>
        <div class="flex items-center gap-3">
            <!-- <div class="dropdown dropdown-end">
            :if={@thread_mode==:flat} 
              <label
                tabindex="0"
                class="!border !border-base-content/30 font-medium rounded-full btn-xs btn btn-outline normal-case"
              >
                <#Icon iconify="material-symbols:sort" class="w-4 h-4" />
                {l("Sort: Chronological")}</label>
              <ul
                tabindex="0"
                class="dropdown-content mt-1 z-[999] menu p-1 shadow bg-base-100 rounded-box w-52"
              >
                <li><a>{l("Chronological")}</a></li>
                <li :if={@thread_mode !=:flat}><a>{l("By latest reply")}</a></li> 
                <li><a>{l("By replies")}</a></li>
                <li><a>{l("By boosts")}</a></li>
                <li><a>{l("By likes")}</a></li>
              </ul>
            </div> -->

          <div class="dropdown dropdown-end">
            <label
              tabindex="0"
              class="rounded-full btn-sm btn btn-ghost btn-circle normal-case"
            >
              <#Icon iconify="ri:list-ordered-2" class="w-5 h-5 text-base-content/70" />
              <!-- {l("Order:")}

              {#if @sort_order == :asc}
                {l("Oldest first")}
              {#else}
                {l("Newest first")}
              {/if} -->
            </label>
            <ul
              tabindex="0"
              class="dropdown-content mt-1 z-[999] menu p-1 gap-1 shadow bg-base-100 rounded-box w-52"
            >
              <li
                phx-click="set"
                phx-value-to_atoms="true"
                phx-value-sort_order="desc"
                phx-value-assign_global="true"
                phx-target={@myself}
              ><a class={"text-base-content/70", "active !text-base-content/100 font-semibold": @sort_order != :asc}>{l("Newest first")}</a></li>
              <li
                phx-click="set"
                phx-value-to_atoms="true"
                phx-value-sort_order="asc"
                phx-value-assign_global="true"
                phx-target={@myself}
              ><a class={"text-base-content/70", "active !text-base-content/100 font-semibold": @sort_order == :asc}>{l("Oldest first")}</a></li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>

  {#if @thread_loading != nil || @replies != []}
    <div class="flex flex-col flex-1">
      <div data-id="replies" class="flex flex-col flex-1 pb-4">
        <Bonfire.UI.Common.LoadPreviousLive
          live_handler={Bonfire.Social.Threads}
          page_info={@page_info}
          target={@myself}
          context={@thread_id}
        />

        <!-- flat mode simple list (use for manually set assigns, like the clicked comment while the thread is loading) -->
        {#for reply <- @replies || []}
          <div data-role="comment-list" class="reply flex relative w-full mx-auto pl-2 pt-3">
            <CommentLive
              comment={reply}
              thread_id={@thread_id}
              feed_id={@feed_id}
              current_url={@current_url}
              thread_object={@object}
              thread_mode={@thread_mode}
              showing_within={@showing_within || :thread}
            />
          </div>
        {/for}

        {#if @thread_mode != :flat}
          <div id={"stream_#{@id}"} phx-update="stream">
            {#for {entry_id, {reply, child_replies}} <- @streams.threaded_replies}
              <ThreadBranchLive
                id={entry_id}
                comment={reply}
                threaded_replies={child_replies}
                thread_id={@thread_id}
                feed_id={@feed_id}
                current_url={@current_url}
                thread_object={@object}
                thread_mode={@thread_mode}
                showing_within={@showing_within || :thread}
              />
            {/for}
          </div>
        {#else}
          <!-- flat mode stream -->
          <div id={"stream_#{@id}"} phx-update="stream">
            {#for {entry_id, reply} <- @streams.replies}
              <div id={entry_id} data-role="comment-flat" class="reply flex relative w-full mx-auto pl-2 pt-3">
                <CommentLive
                  comment={reply}
                  thread_id={@thread_id}
                  feed_id={@feed_id}
                  current_url={@current_url}
                  thread_object={@object}
                  thread_mode={@thread_mode}
                  showing_within={@showing_within || :thread}
                />
              </div>
            {/for}
          </div>
        {/if}

        <Bonfire.UI.Common.LoadMoreLive
          live_handler={Bonfire.Social.Threads}
          page_info={@page_info}
          target={@myself}
          context={@thread_id}
        />
      </div>
    </div>
  {#else}
    <div class="flex flex-col items-center w-full place-content-center">
      {#if @loading}
        <div class="flex items-center mt-8 place-content-center">
          <img src={Bonfire.Web.Endpoint.static_path("/images/loading.svg")}>
          <span class="sr-only">Loading...</span>
        </div>
      {#else}
        <span class="my-12 badge">
          {l("No replies yet...")}
        </span>

        <Bonfire.UI.Social.Activity.ReplyLive
          object_id={id(@object) || @reply_to_id || @thread_id}
          activity_id={id(@activity)}
          activity_component_id={@main_object_component_id}
          permalink={current_url(@__context__)}
          thread_mode={@thread_mode}
          reply_count={0}
          showing_within={@showing_within}
          viewing_main_object
          reply_btn_text={l("Reply")}
          class="flex btn btn-sm flex-1 group btn-primary rounded-full btn-outline items-center gap-2 normal-case"
        />
      {/if}
    </div>
  {/if}
</div>