<div class="relative z-40 dropdown dropdown-end">
  <label tabindex="0" class="flex normal-case btn place-content-center btn-circle btn-ghost btn-sm">
      <Solid.DotsVerticalIcon class="w-5 h-5 text-base-content text-opacity-70" />
  </label>
  <ul tabindex="0" class="p-2 shadow dropdown-content menu bg-base-100 rounded-box w-52">
    <li>
      <Bonfire.UI.Common.OpenModalLive
        :if={e(@thread_id, nil)}
        id={ComponentID.new(Bonfire.UI.Common.OpenModalLive, e(@object, nil))} 
        title_text={e(@label, l "Edit the thread title")}
        form_opts={%{"phx-submit"=> "Bonfire.Social.Objects:set_name"}}
        >
        <Field for={:thread}>
          <TextInput name="name" class="w-full input input-bordered" value={e(@page_title, "")} />
        </Field>
        <:open_btn>
          <div class="text-sm">
            {l "Edit the thread title"}
          </div>
        </:open_btn>
        <:action_btns>
          <HiddenInput name="id" value={e(@thread_id, nil)} />
          <button 
            class="normal-case btn-sm btn btn-primary">
            {l "Save"}
          </button>
        </:action_btns>
      </Bonfire.UI.Common.OpenModalLive>
    </li>
    <li>
      <Bonfire.UI.Common.OpenModalLive
        id={ComponentID.new(Bonfire.UI.Common.OpenModalLive, e(@object, nil))} 
        title_text={e(@label, l "Tag this with topic(s)")}
        form_opts={%{"phx-submit"=> "Bonfire.Social.Objects:tag"}}
        :let={autocomplete: autocomplete}
        >
        <div
          class="flex-1"
          id={:tag_topics}
          phx-hook="InputOrSelectOne"
          > 
          <input 
            name="tags" 
            class="w-full input input-bordered tagify " />
          <select 
            data-phx-autocomplete="Bonfire.Classify:autocomplete"
            class="hidden tagify">
            {#for cat <- autocomplete || []}
              <option 
                class="" 
                value={ulid(cat)}>{e(cat, :profile, :name, nil)}</option>
            {/for}
          </select>
        </div>
        <:open_btn>
          <div class="text-sm">
            {l "Tag this with topic(s)"}
          </div>
        </:open_btn>
        <:action_btns>
          <button 
            class="normal-case btn-sm btn btn-primary">
            {l "Tag"}
          </button>
        </:action_btns>
      </Bonfire.UI.Common.OpenModalLive>
    </li>
    <li
      :if={module_enabled?(Bonfire.UI.Common.ProfileItemLive)}
      >
      <Bonfire.UI.Common.OpenModalLive
        :if={e(@thread_id, nil)}
        id={ComponentID.new(Bonfire.UI.Common.OpenModalLive, e(@object, nil))} 
        title_text={to_string(length(e(@participants, []))) <> " " <> l("participants")}
        >
        <div class="flex flex-col divide-y divide-base-content/10 ">
        {#for p <- e(@participants, [])}
          <div class="py-2">
            <Surface.Components.Dynamic.Component
              module={Bonfire.UI.Common.ProfileItemLive}
              character={e(p, :character, nil) || e(p, :activity, :subject, :character, nil)} 
              profile={e(p, :profile, nil) || e(p, :activity, :subject, :profile, nil)}
              class={"btn btn-square btn-ghost btn-sm"} 
            />
          </div>
        {/for}
        </div>
          <:open_btn>
          <div class="text-sm">
            {l "View participants"}
          </div>
        </:open_btn>
      </Bonfire.UI.Common.OpenModalLive>
    </li>
  </ul>
</div>