<div class="sticky top-[72px] bg-base-200 z-40 p-3 pb-2 border-b rounded-t-md bg-base-200 border-base-content border-opacity-10" role="banner">
  <div class="flex items-center">
    <a
      aria-label="Navigate to the previous page"
      href="javascript:window.history.back()"
      class="btn btn-circle btn-ghost btn-sm"
    >
      <Outline.ChevronLeftIcon class="w-4 h-4 stroke-current" />
    </a>
    <div class="flex flex-col flex-1 ml-2">
      <div class="font-bold text-base-content">{e(assigns, :page_title, l "Discussion")}</div> 
      <div class="text-xs text-base-content text-opacity-70">{length(e(assigns, :participants, [])) } {l "participants"}</div>
    </div>
    <div class="relative z-40 dropdown dropdown-end">
      <label tabindex="0" class="flex normal-case btn place-content-center btn-circle btn-ghost btn-sm">
          <Solid.DotsVerticalIcon class="w-5 h-5 text-base-content text-opacity-70" />
      </label>
      <ul tabindex="0" class="p-2 shadow dropdown-content menu bg-base-100 rounded-box w-52">
        <li>
          <Bonfire.UI.Common.OpenModalLive
            :if={e(assigns, :thread_id, nil)}
            id={ComponentID.new(Bonfire.UI.Common.OpenModalLive, e(assigns, :object, nil))} 
            title_text={e(assigns, :label, l "Edit the thread title")}
            form_opts={%{"phx-submit"=> "Bonfire.Social.Objects:set_name"}}
            >
            <Form for={:thread}>
              <TextInput name="name" class="w-full input input-bordered" value={e(assigns, :page_title, "")} />
            </Form>
            <:open_btn>
              <button class="text-sm">
                {l "Edit the thread title"}
              </button>
            </:open_btn>
            <:action_btns>
              <HiddenInput name="id" value={e(assigns, :thread_id, nil)} />
              <button 
                class="normal-case btn-sm btn btn-primary">
                {l "Save"}
              </button>
            </:action_btns>
          </Bonfire.UI.Common.OpenModalLive>
        </li>
         <li>
          <Bonfire.UI.Common.OpenModalLive
            :if={e(assigns, :thread_id, nil)}
            id={ComponentID.new(Bonfire.UI.Common.OpenModalLive, e(assigns, :object, nil))} 
            title_text={to_string(length(e(assigns, :participants, []))) <> " " <> l("participants")}
            
            >
            <div class="flex flex-col divide-y divide-base-content/10 ">
            {#for p <- e(assigns, :participants, [])}
              <div class="py-2">
                <Bonfire.UI.Me.ProfileItemLive 
                  character={e(p, :character, nil) || e(p, :activity, :subject, :character, nil)} 
                  profile={e(p, :profile, nil) || e(p, :activity, :subject, :profile, nil)}
                  class={"btn btn-square btn-ghost btn-sm"} 
                />
              </div>
            {/for}
            </div>
             <:open_btn>
              <button class="text-sm">
                {l "View participants"}
              </button>
            </:open_btn>
          </Bonfire.UI.Common.OpenModalLive>
        </li>
        
        <!-- <li>
          <button 
            phx-value-thread_mode={e(assigns, :thread_mode, :thread)} 
            phx-click="Bonfire.Social.Posts:switch_thread_mode">
            {#if e(assigns, :thread_mode, nil) == :flat}
            {l "Nested thread mode"}
            {#else}
            {l "Flat thread mode"}
            {/if}
          </button>
        </li> -->
      </ul>
    </div>
  </div>
  
</div>