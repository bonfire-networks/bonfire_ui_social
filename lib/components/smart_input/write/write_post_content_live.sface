<div class="flex flex-col h-full  write_post_content">
  <Form
    for={%{}}
    as={:post}
    submit={JS.push(handler(@create_object_type)) |> Bonfire.UI.Common.SmartInput.LiveHandler.minimize()}
    action={"/LiveHandler/" <> handler(@create_object_type)}
    change="validate"
    id="#smart_input_form"
    opts={
      autocomplete: "off",
      "phx-target": "#smart_input"
    }
    class={if WriteEditorLive.use_rich_editor?(e(@smart_input_opts, :wysiwyg, true), @__context__),
      do: "with_editor flex-1",
      else: "with_textarea flex-1"}
  >
    <Bonfire.UI.Common.InputControlsLive
      preloaded_recipients={e(@preloaded_recipients, [])}
      open_boundaries={@open_boundaries}
      boundaries_modal_id={@boundaries_modal_id}
      smart_input_opts={@smart_input_opts}
      reply_to_id={id(@reply_to_id)}
      context_id={@context_id}
      create_object_type={@create_object_type}
      to_boundaries={@to_boundaries}
      to_circles={@to_circles}
      exclude_circles={@exclude_circles}
      mentions={@mentions}
      showing_within={@showing_within}
      uploads={@uploads}
      uploaded_files={@uploaded_files}
      reset_smart_input={@reset_smart_input}
      show_cw_toggle
      preview_boundary_for_id={@preview_boundary_for_id}
      preview_boundary_for_username={@preview_boundary_for_username}
      preview_boundary_verbs={@preview_boundary_verbs}
      boundary_preset={@boundary_preset}
    >
      <!-- CW -->
      <div
        phx-update={if @reset_smart_input, do: "replace", else: "ignore"}
        class="hidden"
        id="smart_input_post_title"
      >
        <!-- <div class="p-4 mb-0 bg-info/10">
          <div class="flex">
            <div class="flex-shrink-0">
              <#Icon iconify="heroicons-solid:information-circle" class="w-5 h-5 text-info" />
            </div>
            <div class="flex-1 ml-3 md:flex md:justify-between">
              <p class="text-sm text-info">{l(
                  "By toggling the Content Warning all the contents will be marked as sensitive. You can add an optional CW message."
                )}</p>
            </div>
          </div>
        </div> -->
        <Inputs for={:post_content}>
          <div class="relative p-2 border-b bg-base-100 border-base-content/20">
            <#Icon iconify="ri:alert-fill" class="absolute w-5 h-5 stroke-1 top-[14px] left-3 text-warning" />
            <label for="title" class="sr-only">{l("Title")}</label>
            <Field name={:summary}>
              <TextInput
                opts={
                  placeholder: l("Enter an optional content warning"),
                  "phx-debounce": "blur"
                }
                class="w-full h-8 pl-10 text-sm bg-transparent rounded input"
              />
            </Field>
          </div>
        </Inputs>
      </div>

      <!-- BODY -->
      <div id="write_post_body_field" class="h-full flex-1 break-words" phx-update="ignore">
        <!-- phx-update={if @reset_smart_input, do: "replace", else: "ignore"} -->
        <!-- <Inputs for={:post_content}>
          <label for="description" class="sr-only">{l("Text")}</label>
          <Field class="flex-1 h-full grow" name={:html_body}>
            <TextInput  class="h-[30px] editor_hidden_input" /> -->
        <WriteEditorLive
          field_name="post[post_content][html_body]"
          reset_smart_input={@reset_smart_input}
          textarea_class={@textarea_class}
          smart_input_opts={@smart_input_opts}
          insert_text={@insert_text}
          showing_within={@showing_within}
        />
        <!-- </Field>
        </Inputs> -->
      </div>
    </Bonfire.UI.Common.InputControlsLive>
  </Form>
</div>
