
<main class="flex flex-col h-body">


  {#if @tab_id in ["compose", "select_recipients", "thread"]}
    <div class="flex flex-col h-full grow">
    {#if @tab_id=="thread"}
      <Bonfire.UI.Social.ObjectThreadLive
        page={@page}
        page_title={@page_title}
        create_activity_type={e(assigns, :create_activity_type, nil)}
        to_circles={e(assigns, :to_circles, [])}
        participants={e(assigns, :participants, [])}
        replies={e(assigns, :replies, nil)}
        smart_input_text={@smart_input_text}
        smart_input_prompt={e(assigns, :smart_input_prompt, "")}
        thread_id={@thread_id}
        thread_mode={:flat}
        reply_to_id={e(assigns, :reply_to_id, "")}
        activity={@activity}
        object={@object}
        url={@url}
        show_reply_input={true}
        reverse_order={true}
        showing_within={:message}
        textarea_class={"h-8 max-h-16 resize-y max-w-full textarea prose prose-sm bg-base-200"}
        smart_input_class={"mt-3 bg-slate-50 rounded-xl sticky bottom-0"}
        replied_activity_class={"relative p-3 py-2 bg-neutral-content bg-opacity-5 m-3 mb-1 rounded-md"}
      /> 
    {#elseif @tab_id in ["compose", "select_recipients"]}
      <div class="p-3 bg-base-100 rounded-box">
        <!-- <div role="banner" class="sticky top-[48px] lg:top-[48px] lg:-mt-[20px] lg:pt-[8px] bg-base-100 z-30 w-full border-b tablet:rounded-t border-base-300">  
          <div class="hidden h-3 tablet:block bg-base-300 "></div>
          <div class="relative rounded-b-none tablet:rounded">
            <div class="flex items-center p-3">
              <div class="flex items-center flex-1 space-x-2 text-left">
                <h1 class="flex items-center font-medium text-md">
                  <div>
                    {l "Start a new conversation"}  
                    <span :if={e(assigns, :to_circles, nil)}>
                      {l "with"} 
                    </span>
                    </div> 
                  {#for {name, id} <- e(assigns, :to_circles, [])}
                    <div class="badge">{name}</div>
                  {/for}
                </h1> 
              </div>
            </div>
          </div>
        </div> -->
        <div 
          class="mb-3"
          id={:select_recipients}
          phx-hook="InputOrSelectOne"
          >
          <div class="flex items-center space-x-6">
            <div class="flex items-center w-16 h-10 text-sm font-bold "><span>To</span></div>
            <input id="tagify" name="to_circles[]" class="flex-1 h-10 bg-transparent border-t-0 border-b-2 border-l-0 border-r-0 border-base-content border-opacity-30" />
            <select class="hidden">
              {#for user <- @users}
                <option value={e(user, :edge, :object, :id, nil)}>{e(user, :edge, :object, :profile, :name, "")} - {e(user, :edge, :object, :character, :username, "")}</option>
              {/for}
            </select>
          </div>

        </div>

        <!-- <div class="flex items-center mb-3 space-x-6">
          <div class="flex items-center w-16 h-10 text-sm font-bold"><span>Subject</span></div>
          <input class="flex-1 h-10 border-t-0 border-b-2 border-l-0 border-r-0 rounded-none input border-base-content border-opacity-30" />
        </div> -->

<!-- 
         <Bonfire.UI.Social.SelectRecipientsLive 
          users={e(assigns, :users, [])}
          tab_id={e(assigns, :tab_id, nil)}
          to_circles={e(assigns, :to_circles, [])}
          limit={10}
        /> -->

        <Bonfire.UI.Common.SmartInputLive
          id={:smart_input}
          :if={current_user(assigns)}
          current_user={current_user(assigns)}
          reply_to_id={e(assigns, :reply_to_id, "")}
          thread_id={e(assigns, :thread_id, nil)}
          create_activity_type={e(assigns, :create_activity_type, nil)}
          to_circles={e(assigns, :to_circles, [])}
          smart_input_prompt={e(assigns, :smart_input_prompt, "")}
          smart_input_text={e(assigns, :smart_input_text, "")}
          showing_within={:message}
          boundary={"message"}
          title_open={true}
          title_prompt={l "Enter an optional subject"}
        />
    </div>
      {/if}
  </div>

  {#else}
    <Bonfire.UI.Common.PageHeaderLive page_title={@page_title} />
    <div class="flex-1 rounded-b-xl md:mx-0 text-base-content lg:mt-0 bg-base-100">
      <div id="empty-feed">
        <div class="flex items-center justify-center py-8">
          <div class="badge">
            {l "Select a thread or start a new one..."}
          </div>
        </div>
      </div>
    </div>
  {/if}

</main>